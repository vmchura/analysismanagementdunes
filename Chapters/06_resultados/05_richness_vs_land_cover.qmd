Relación entre la diversidad vegetal y los tipos de cobertura del suelo a 50m y 100m de las playas.

```{r 06_05_setup, include=FALSE}
# Opciones globales de knitr - controla todos los fragmentos de código
knitr::opts_chunk$set(
  warning = FALSE,
  message = FALSE,
  echo = FALSE
)

# Cargar librerías necesarias
library(tidyverse)
library(ggplot2)
library(gridExtra) # para organizar múltiples gráficos
library(RColorBrewer) # para paletas de colores
library(here)
# Cargar configuración global
source(here("R","global_config.R"))

# Cargar datos
load(here("data","all_observations_split.RData"))
load(here("data","all_land_cover_data.RData"))

# --- Funciones de Análisis de Riqueza de Especies y Cobertura del Suelo ---

# Calcular diversidad vegetal de especies (número de especies presentes) para cada playa
calculate_beach_richness <- function(region_data) {
  # Obtener columnas de especies - excluir "plot" e "id_beach"
  species_cols <- setdiff(names(region_data), c("plot", "id_beach"))

  # Agrupar por playa y calcular presencia de cada especie en toda la playa
  region_data %>%
    group_by(id_beach) %>%
    summarise(across(all_of(species_cols), ~ max(., na.rm = TRUE) > 0)) %>%
    # Reemplazar -Inf con FALSE (ocurre cuando todos los valores eran NA y usamos max con na.rm=TRUE)
    mutate(across(all_of(species_cols), ~ ifelse(is.infinite(.), FALSE, .))) %>%
    # Calcular riqueza como suma de especies presentes
    mutate(richness = rowSums(across(all_of(species_cols))))
}

# Función para reestructurar datos de cobertura del suelo para visualización
prepare_land_cover <- function(region_data) {
  region_data %>%
    pivot_longer(
      cols = -id_beach,
      names_to = "cover_type",
      values_to = "percentage"
    ) %>%
    # Extraer la distancia (50m o 100m) del nombre de la columna
    mutate(
      distance = ifelse(grepl("^x50m", cover_type), "50m", "100m"),
      # Limpiar el nombre del tipo de cobertura eliminando el prefijo de distancia
      cover_type = gsub("^x(50|100)m_(.+)_percent$", "\\2", cover_type)
    )
}

# Calcular diversidad vegetal para cada región a nivel de playa
girona_richness <- calculate_beach_richness(beaches_by_region$Girona) %>%
  mutate(region = "Girona")
barcelona_richness <- calculate_beach_richness(beaches_by_region$Barcelona) %>%
  mutate(region = "Barcelona")
tarragona_richness <- calculate_beach_richness(beaches_by_region$Tarragona) %>%
  mutate(region = "Tarragona")

# Combinar datos de riqueza
all_richness <- bind_rows(girona_richness, barcelona_richness, tarragona_richness)

# Preparar datos de cobertura del suelo para todas las regiones
girona_land <- prepare_land_cover(land_cover_data$Girona) %>%
  mutate(region = "Girona")
barcelona_land <- prepare_land_cover(land_cover_data$Barcelona) %>%
  mutate(region = "Barcelona")
tarragona_land <- prepare_land_cover(land_cover_data$Tarragona) %>%
  mutate(region = "Tarragona")

# Combinar todos los datos de cobertura del suelo
all_land_cover <- bind_rows(girona_land, barcelona_land, tarragona_land)

# Unir datos de cobertura del suelo con datos de riqueza de especies para 50m y 100m
richness_land_cover_50m <- all_richness %>%
  left_join(
    all_land_cover %>%
      filter(distance == "50m") %>%
      select(id_beach, region, cover_type, percentage),
    by = c("id_beach", "region")
  ) %>%
  mutate(distance = "50m")

richness_land_cover_100m <- all_richness %>%
  left_join(
    all_land_cover %>%
      filter(distance == "100m") %>%
      select(id_beach, region, cover_type, percentage),
    by = c("id_beach", "region")
  ) %>%
  mutate(distance = "100m")

# Combinar ambos conjuntos de datos
richness_land_cover_combined <- bind_rows(richness_land_cover_50m, richness_land_cover_100m)

# Ordenar regiones según nuestro orden estándar
all_richness <- order_provinces(all_richness, column_name = "region")

# Seleccionar los tipos de cobertura del suelo más relevantes para el análisis
relevant_cover_types <- c("urban", "forests", "scrubland", "crops", "grassland")

# Crear diccionario de traducción para los tipos de cobertura relevantes
cover_type_translation <- c(
  "urban" = "Urbano",
  "forests" = "Bosques", 
  "scrubland" = "Matorral",
  "crops" = "Cultivos",
  "grassland" = "Pastizal"
)

richness_vs_land <- richness_land_cover_combined %>%
  filter(cover_type %in% relevant_cover_types) %>%
  # Traducir tipos de cobertura del suelo a español
  mutate(cover_type_spanish = cover_type_translation[cover_type])

# Asegurar que las regiones mantengan el orden consistente
richness_vs_land <- order_provinces(richness_vs_land, column_name = "region")

# Reordenar los niveles del factor para cover_type_spanish para controlar el orden de las columnas
richness_vs_land$cover_type_spanish <- factor(richness_vs_land$cover_type_spanish, 
                                              levels = cover_type_translation[relevant_cover_types])

# Traducir etiquetas de distancia a español
richness_vs_land <- richness_vs_land %>%
  mutate(distance_spanish = ifelse(distance == "50m", "50m", "100m"))
```


```{r}
#| label: fig-diversidad-vegetal-vs-cobertura-suelo
#| fig-cap: "Relación entre la diversidad vegetal y diferentes tipos de cobertura del suelo a distancias de 50m y 100m, comparando cómo el entorno circundante a diferentes escalas impacta la biodiversidad dunar"
#| echo: false
#| eval: true
#| output: true
#| message: false
#| warning: false
#| fig-width: 15
#| fig-height: 8
#| fig-pos: "H"

# Crear gráficos de dispersión para riqueza vs. cobertura del suelo con ambas distancias
# Especificar fórmula explícitamente para evitar mensaje automático
ggplot(richness_vs_land, aes(x = percentage, y = richness, color = region)) +
  geom_point(alpha = 0.7, size = 2) +
  geom_smooth(method = "lm", formula = y ~ x, se = TRUE, linetype = "dashed") +
  # Usar facet_grid para crear filas para distancias y columnas para tipos de cobertura (EN ESPAÑOL)
  facet_grid(distance_spanish ~ cover_type_spanish) +
  theme_minimal() +
  labs(
    title = "Diversidad Vegetal vs Tipos de Cobertura del Suelo\na Diferentes Distancias",
    x = "Porcentaje de Cobertura del Suelo (%)",
    y = "Número de Especies Presentes",
    color = "Región"
  ) +
  # Usar nuestros colores personalizados de provincias
  scale_color_manual(values = PROVINCE_COLORS) +
  # Establecer límites del eje x a 0-100 para todas las facetas
  scale_x_continuous(limits = c(0, 100), breaks = seq(0, 100, 25)) +
  theme(
    legend.position = "top",
    strip.background = element_rect(fill = "gray90"),
    strip.text = element_text(face = "bold"),
    axis.text.x = element_text(angle = 0),
    panel.spacing = unit(1, "lines"),
    panel.border = element_rect(color = "gray80", fill = NA),
    plot.title = element_text(hjust = 0.5, size = 12)
  )

# Guardar el gráfico
ggsave(here("figures","richness_vs_land_cover_combined.png"), width = 15, height = 8)
```

La @fig-diversidad-vegetal-vs-cobertura-suelo muestra las relaciones entre diversidad vegetal y cobertura del suelo. Se visualiza que en el tipo de cobertura de suelo de Urbano, Bosques, Cultivos y Pastizal, la región de Girona tiene menos diversidad vegetal que la región de Tarragona.
Las tendencias son similares a 50m y 100m, con variabilidad regional en las respuestas.