```{r 10_01_setup, include=FALSE}
library(here)
# Global knitr options - controls all code chunks
knitr::opts_chunk$set(
  warning = FALSE,
  message = FALSE,
  echo = FALSE
)

# Load necessary libraries
library(tidyverse)
library(ggplot2)
library(vegan)     # For NMDS analysis
library(gridExtra) # For arranging multiple plots
library(RColorBrewer) # For color palettes
library(patchwork)  # For combining plots

# Load global configuration
source(here("R", "global_config.R"))

# Load data
load(here("data","all_observations_split.RData"))
load(here("data","all_management_data.RData"))

# --- Regional NMDS Analysis with Management Integration ---

# Function to prepare species data matrix for NMDS analysis
# Converting Braun-Blanquet values to numeric percentage cover
prepare_nmds_data <- function(region_data) {
  # Get species columns - exclude non-species columns
  species_cols <- setdiff(names(region_data), c("plot", "id_beach"))

  # Create a matrix for NMDS analysis with percentage values
  nmds_matrix <- region_data %>%
    # Convert Braun-Blanquet values to percentages
    mutate(across(all_of(species_cols), bb_to_percentage)) %>%
    # Select only species columns to create the species matrix
    select(all_of(species_cols))

  # Convert to matrix
  as.matrix(nmds_matrix)
}

# Function to combine management data with regional beach data
combine_regional_management <- function(region_data, region_management, region_name) {
  # Join regional data with management data
  combined_data <- region_data %>%
    left_join(region_management, by = "id_beach") %>%
    mutate(region = region_name) %>%
    # Convert management variables to numeric (0-5 scale)
    mutate(
      managed_paths_score = as.numeric(managed_paths),
      rope_fences_score = as.numeric(rope_fences),
      mechanical_cleaning_score = as.numeric(mechanical_cleaning),
      seasonal_services_score = as.numeric(surface_area_occupied_by_seasonal_services_and_amenities_on_or_less_than_5_m_from_the_dunes),
      fixed_services_score = as.numeric(surface_area_of_parking_or_other_fixed_services_on_or_less_than_5_m_from_the_dunes),
      
      # Replace NA with 0 for management scores (assuming no data means no management)
      managed_paths_score = ifelse(is.na(managed_paths_score), 0, managed_paths_score),
      rope_fences_score = ifelse(is.na(rope_fences_score), 0, rope_fences_score),
      mechanical_cleaning_score = ifelse(is.na(mechanical_cleaning_score), 0, mechanical_cleaning_score),
      seasonal_services_score = ifelse(is.na(seasonal_services_score), 0, seasonal_services_score),
      fixed_services_score = ifelse(is.na(fixed_services_score), 0, fixed_services_score),
      
      # Calculate overall management intensity as average of management scores
      management_intensity_raw = (managed_paths_score + rope_fences_score + mechanical_cleaning_score + 
                                 seasonal_services_score + fixed_services_score) / 5,
      
      # Create management categories based on average intensity
      management_category = case_when(
        management_intensity_raw == 0 ~ "Unmanaged",
        management_intensity_raw > 0 & management_intensity_raw <= 2 ~ "Low Management",
        management_intensity_raw > 2 & management_intensity_raw <= 4 ~ "Moderate Management",
        management_intensity_raw > 4 ~ "High Management",
        TRUE ~ "Unknown"
      )
    ) %>%
    # Ensure factor ordering
    mutate(
      management_category = factor(management_category,
                                  levels = c("Unmanaged", "Low Management", "Moderate Management", "High Management", "Unknown"))
    )
  
  return(combined_data)
}

# Function to run NMDS analysis for a single region with management overlay
run_regional_management_nmds <- function(region_data, region_management, region_name) {
  # Combine data with management information
  combined_data <- combine_regional_management(region_data, region_management, region_name)
  
  # Prepare species matrix
  species_matrix <- prepare_nmds_data(region_data)
  
  # Run NMDS analysis
  set.seed(123) # For reproducibility
  nmds_result <- metaMDS(
    species_matrix,
    distance = "bray",
    k = 2,        # Number of dimensions (2 for easy visualization)
    trymax = 100,  # Maximum number of random starts
    autotransform = FALSE # Data already transformed to percentages
  )
  
  # Create a data frame with NMDS results and management information
  nmds_data <- data.frame(
    NMDS1 = nmds_result$points[,1],
    NMDS2 = nmds_result$points[,2],
    Beach = combined_data$id_beach,
    Plot = combined_data$plot,
    Management_Category = combined_data$management_category,
    Management_Intensity = combined_data$management_intensity_raw,
    Managed_Paths = combined_data$managed_paths_score,
    Rope_Fences = combined_data$rope_fences_score,
    Mechanical_Cleaning = combined_data$mechanical_cleaning_score
  )
  
  # Apply k-means clustering to identify habitat types (as in regional analysis)
  set.seed(456) # For reproducibility
  kmeans_result <- kmeans(nmds_result$points, centers = 4)
  nmds_data$Cluster <- as.factor(kmeans_result$cluster)
  
  # Define habitat type labels based on clusters
  habitat_labels <- c(
    "1" = "Front-dune",
    "2" = "Back-dune", 
    "3" = "Mixed",
    "4" = "Disturbed"
  )
  
  # Map cluster numbers to habitat labels
  nmds_data$Habitat <- habitat_labels[nmds_data$Cluster]
  
  # Extract species scores
  species_scores <- data.frame(
    species = colnames(species_matrix),
    NMDS1 = scores(nmds_result, "species")[,1],
    NMDS2 = scores(nmds_result, "species")[,2]
  )
  
  # Get the most important species to label in the plot
  top_species <- species_scores %>%
    mutate(distance = sqrt(NMDS1^2 + NMDS2^2)) %>%
    arrange(desc(distance)) %>%
    slice_head(n = 8)  # Limit to 8 for cleaner region-specific plots
  
  # Create NMDS plot colored by management category
  p_nmds_management <- ggplot(nmds_data %>% filter(!is.na(Management_Category)), 
                             aes(x = NMDS1, y = NMDS2)) +
    # Add points colored by management category and shaped by habitat
    geom_point(aes(color = Management_Category, shape = Habitat), size = 3, alpha = 0.8) +
    # Add convex hulls for management categories
    stat_ellipse(aes(group = Management_Category, linetype = Management_Category),
                 type = "norm", level = 0.8, size = 0.8) +
    # Add top species labels
    geom_text(data = top_species,
              aes(x = NMDS1, y = NMDS2, label = species),
              size = 2.5, fontface = "italic", hjust = -0.1, vjust = -0.1) +
    # Customize appearance
    theme_minimal() +
    labs(
      title = paste("NMDS: Management vs Vegetation -", region_name),
      subtitle = paste("Stress =", round(nmds_result$stress, 3), "| Management Scale: 0-5"),
      x = "NMDS1",
      y = "NMDS2",
      color = "Management Intensity",
      shape = "Habitat Type"
    ) +
    # Use color-blind friendly palette
    scale_color_brewer(palette = "Spectral", direction = -1) +
    # Add arrows for top species
    geom_segment(data = top_species,
                 aes(x = 0, y = 0, xend = NMDS1, yend = NMDS2),
                 arrow = arrow(length = unit(0.15, "cm")),
                 alpha = 0.4,
                 color = "darkgrey") +
    # Customize theme elements
    theme(
      legend.position = "right",
      legend.box = "vertical",
      legend.title = element_text(face = "bold", size = 9),
      legend.text = element_text(size = 8),
      panel.grid.minor = element_blank(),
      plot.title = element_text(face = "bold", size = 11),
      plot.subtitle = element_text(size = 9)
    )
  
  # Create NMDS plot with management intensity as continuous gradient
  p_nmds_gradient <- ggplot(nmds_data %>% filter(!is.na(Management_Intensity)), 
                           aes(x = NMDS1, y = NMDS2)) +
    # Add points colored by management intensity (continuous)
    geom_point(aes(color = Management_Intensity, shape = Habitat), size = 3, alpha = 0.8) +
    # Add top species labels
    geom_text(data = top_species,
              aes(x = NMDS1, y = NMDS2, label = species),
              size = 2.5, fontface = "italic", hjust = -0.1, vjust = -0.1) +
    # Customize appearance
    theme_minimal() +
    labs(
      title = paste("NMDS: Management Gradient -", region_name),
      subtitle = paste("Stress =", round(nmds_result$stress, 3), "| Continuous Scale"),
      x = "NMDS1",
      y = "NMDS2",
      color = "Management\nIntensity (0-5)",
      shape = "Habitat Type"
    ) +
    # Use viridis color scale for continuous variable
    scale_color_viridis_c(option = "plasma", direction = -1) +
    # Add arrows for top species
    geom_segment(data = top_species,
                 aes(x = 0, y = 0, xend = NMDS1, yend = NMDS2),
                 arrow = arrow(length = unit(0.15, "cm")),
                 alpha = 0.4,
                 color = "darkgrey") +
    # Customize theme elements
    theme(
      legend.position = "right",
      legend.box = "vertical", 
      legend.title = element_text(face = "bold", size = 9),
      legend.text = element_text(size = 8),
      panel.grid.minor = element_blank(),
      plot.title = element_text(face = "bold", size = 11),
      plot.subtitle = element_text(size = 9)
    )
  
  return(list(
    plot_management = p_nmds_management,
    plot_gradient = p_nmds_gradient,
    data = nmds_data,
    species = top_species,
    result = nmds_result,
    combined_data = combined_data
  ))
}

# Run regional management NMDS for each region
tarragona_analysis <- run_regional_management_nmds(
  beaches_by_region$Tarragona, 
  management_data$Tarragona, 
  "Tarragona"
)

barcelona_analysis <- run_regional_management_nmds(
  beaches_by_region$Barcelona, 
  management_data$Barcelona, 
  "Barcelona"
)

girona_analysis <- run_regional_management_nmds(
  beaches_by_region$Girona, 
  management_data$Girona, 
  "Girona"
)

# Calculate management distribution by region
calculate_management_distribution <- function(analysis_data, region_name) {
  analysis_data$data %>%
    filter(!is.na(Management_Category) & Management_Category != "Unknown") %>%
    group_by(Management_Category) %>%
    summarise(Count = n(), .groups = "drop") %>%
    mutate(
      Percentage = Count / sum(Count) * 100,
      Region = region_name
    )
}

tarragona_mgmt_dist <- calculate_management_distribution(tarragona_analysis, "Tarragona")
barcelona_mgmt_dist <- calculate_management_distribution(barcelona_analysis, "Barcelona")
girona_mgmt_dist <- calculate_management_distribution(girona_analysis, "Girona")

# Combine management distribution data
all_management_distribution <- bind_rows(
  tarragona_mgmt_dist,
  barcelona_mgmt_dist,
  girona_mgmt_dist
)

# Order regions
all_management_distribution <- all_management_distribution %>%
  mutate(Region = factor(Region, levels = PROVINCE_ORDER))
```

This section presents a comprehensive regional analysis combining Non-metric Multidimensional Scaling (NMDS) of coastal dune vegetation with management practices for each of the three Catalan regions: Tarragona, Barcelona, and Girona. This integrated approach allows us to understand how management intensity (measured on a 0-5 ordinal scale) affects vegetation patterns within each biogeographical region.

```{r}
#| label: fig-regional-management-categories
#| fig-cap: "NMDS plots showing vegetation composition patterns overlaid with management intensity categories for each region. Points represent individual plots colored by management category and shaped by habitat type."
#| echo: false
#| eval: true
#| output: true
#| fig-width: 16
#| fig-height: 18
#| fig-pos: "H"

# Combine the three management category plots using patchwork
combined_mgmt_plot <- tarragona_analysis$plot_management / 
                     barcelona_analysis$plot_management / 
                     girona_analysis$plot_management +
  plot_layout(ncol = 1, heights = c(1, 1, 1)) +
  plot_annotation(
    title = "Regional NMDS Analysis: Vegetation Response to Management Categories",
    subtitle = "Management intensity based on ordinal scores (0-5) for paths, fences, cleaning, and services",
    theme = theme(
      plot.title = element_text(face = "bold", hjust = 0.5, size = 14),
      plot.subtitle = element_text(hjust = 0.5, size = 12)
    )
  )

print(combined_mgmt_plot)

# Save the plot
ggsave(here("figures","nmds_regional_management_categories.png"), combined_mgmt_plot, width = 16, height = 18)
```

```{r}
#| label: fig-regional-management-gradient
#| fig-cap: "NMDS plots showing vegetation composition with management intensity as a continuous gradient (0-5 scale) for each region. Color intensity represents the level of management from unmanaged (dark) to highly managed (bright)."
#| echo: false
#| eval: true
#| output: true
#| fig-width: 16
#| fig-height: 18
#| fig-pos: "H"

# Combine the three management gradient plots using patchwork
combined_gradient_plot <- tarragona_analysis$plot_gradient / 
                         barcelona_analysis$plot_gradient / 
                         girona_analysis$plot_gradient +
  plot_layout(ncol = 1, heights = c(1, 1, 1)) +
  plot_annotation(
    title = "Regional NMDS Analysis: Vegetation Response to Management Intensity Gradient",
    subtitle = "Continuous management scale showing cumulative effect of all management practices",
    theme = theme(
      plot.title = element_text(face = "bold", hjust = 0.5, size = 14),
      plot.subtitle = element_text(hjust = 0.5, size = 12)
    )
  )

print(combined_gradient_plot)

# Save the plot
ggsave(here("figures","nmds_regional_management_gradient.png"), combined_gradient_plot, width = 16, height = 18)
```

```{r}
#| label: fig-regional-management-distribution
#| fig-cap: "Distribution of management intensity categories within each region, showing the relative proportion of unmanaged, low, moderate, and high management areas across Tarragona, Barcelona, and Girona."
#| echo: false
#| eval: true
#| output: true
#| fig-width: 12
#| fig-height: 8
#| fig-pos: "H"

# Create a stacked bar chart of management distribution by region
all_management_distribution %>%
  ggplot(aes(x = Region, y = Percentage, fill = Management_Category)) +
  geom_bar(stat = "identity", position = "stack", color = "white") +
  geom_text(aes(label = paste0(round(Percentage, 1), "%")),
            position = position_stack(vjust = 0.5),
            color = "white", fontface = "bold", size = 3) +
  theme_minimal() +
  labs(
    title = "Distribution of Management Intensity Categories by Region",
    subtitle = "Based on ordinal management scores (0-5) across multiple practices",
    x = "Region",
    y = "Percentage of Plots",
    fill = "Management Category"
  ) +
  # Apply custom theme
  theme(
    axis.text.x = element_text(face = "bold"),
    legend.position = "right",
    plot.title = element_text(face = "bold"),
    panel.grid.major.x = element_blank()
  ) +
  # Use consistent color palette
  scale_fill_brewer(palette = "Spectral", direction = -1) +
  scale_x_discrete(limits = PROVINCE_ORDER)

# Save the plot
ggsave(here("figures","regional_management_distribution.png"), width = 12, height = 8)
```

```{r}
#| label: fig-management-practices-by-region
#| fig-cap: "Comparison of individual management practice scores across regions, showing the average intensity of managed paths, rope fences, mechanical cleaning, seasonal services, and fixed services for each region."
#| echo: false
#| eval: true
#| output: true
#| fig-width: 14
#| fig-height: 10
#| fig-pos: "H"

# Combine all regional data for management practices comparison
all_regional_data <- bind_rows(
  tarragona_analysis$data %>% mutate(Region = "Tarragona"),
  barcelona_analysis$data %>% mutate(Region = "Barcelona"),
  girona_analysis$data %>% mutate(Region = "Girona")
) %>%
  mutate(Region = factor(Region, levels = PROVINCE_ORDER))

# Prepare data for management practices comparison
mgmt_practices_regional <- all_regional_data %>%
  filter(!is.na(Managed_Paths)) %>%
  select(Region, Managed_Paths, Rope_Fences, Mechanical_Cleaning) %>%
  pivot_longer(cols = c(Managed_Paths, Rope_Fences, Mechanical_Cleaning), 
               names_to = "practice", 
               values_to = "score") %>%
  mutate(
    practice = case_when(
      practice == "Managed_Paths" ~ "Managed Paths",
      practice == "Rope_Fences" ~ "Rope Fences", 
      practice == "Mechanical_Cleaning" ~ "Mechanical Cleaning"
    )
  ) %>%
  group_by(Region, practice) %>%
  summarise(
    mean_score = mean(score, na.rm = TRUE),
    se_score = sd(score, na.rm = TRUE) / sqrt(n()),
    median_score = median(score, na.rm = TRUE),
    .groups = "drop"
  )

# Create comparison plot with both mean and median
p1 <- ggplot(mgmt_practices_regional, aes(x = Region, y = mean_score, fill = practice)) +
  geom_bar(stat = "identity", position = "dodge", alpha = 0.8) +
  geom_errorbar(aes(ymin = mean_score - se_score, ymax = mean_score + se_score),
                position = position_dodge(width = 0.9), width = 0.2) +
  geom_text(aes(label = round(mean_score, 1)),
            position = position_dodge(width = 0.9), 
            vjust = -0.5, fontface = "bold", size = 3) +
  theme_minimal() +
  labs(
    title = "Average Management Practice Intensity by Region",
    subtitle = "Mean scores with standard error bars (0-5 scale)",
    x = "Region",
    y = "Average Management Score (0-5)",
    fill = "Management Practice"
  ) +
  theme(
    axis.text.x = element_text(face = "bold"),
    legend.position = "bottom",
    plot.title = element_text(face = "bold", size = 12),
    panel.grid.major.x = element_blank()
  ) +
  scale_fill_brewer(palette = "Set2") +
  ylim(0, 5.5) +
  geom_hline(yintercept = c(1, 2, 3, 4, 5), linetype = "dashed", alpha = 0.3)

# Create a boxplot for distribution visualization
p2 <- all_regional_data %>%
  filter(!is.na(Managed_Paths)) %>%
  select(Region, Management_Intensity) %>%
  ggplot(aes(x = Region, y = Management_Intensity, fill = Region)) +
  geom_boxplot(alpha = 0.7) +
  geom_jitter(width = 0.2, alpha = 0.5) +
  theme_minimal() +
  labs(
    title = "Distribution of Overall Management Intensity by Region",
    subtitle = "Boxplots showing median, quartiles, and individual plot values",
    x = "Region",
    y = "Overall Management Intensity (0-5)",
    fill = "Region"
  ) +
  theme(
    axis.text.x = element_text(face = "bold"),
    legend.position = "none",
    plot.title = element_text(face = "bold", size = 12),
    panel.grid.major.x = element_blank()
  ) +
  scale_fill_manual(values = PROVINCE_COLORS) +
  ylim(0, 5.5) +
  geom_hline(yintercept = c(1, 2, 3, 4, 5), linetype = "dashed", alpha = 0.3)

# Combine plots
combined_practices_plot <- p1 / p2 +
  plot_layout(heights = c(1, 1))

print(combined_practices_plot)

# Save the plot
ggsave(here("figures","management_practices_by_region.png"), combined_practices_plot, width = 14, height = 10)
```

```{r}
#| label: fig-habitat-management-interaction
#| fig-cap: "Cross-tabulation showing the relationship between habitat types and management intensity categories across all regions, revealing how management practices interact with natural habitat classification."
#| echo: false
#| eval: true
#| output: true
#| fig-width: 12
#| fig-height: 8
#| fig-pos: "H"

# Create habitat-management interaction analysis
habitat_management_interaction <- all_regional_data %>%
  filter(!is.na(Management_Category) & Management_Category != "Unknown" & !is.na(Habitat)) %>%
  group_by(Region, Habitat, Management_Category) %>%
  summarise(count = n(), .groups = "drop") %>%
  group_by(Region, Habitat) %>%
  mutate(percentage = count / sum(count) * 100) %>%
  ungroup()

# Create stacked bar plot
ggplot(habitat_management_interaction, aes(x = Habitat, y = percentage, fill = Management_Category)) +
  geom_bar(stat = "identity", position = "stack", color = "white") +
  geom_text(aes(label = ifelse(percentage > 5, paste0(round(percentage, 1), "%"), "")),
            position = position_stack(vjust = 0.5),
            color = "white", fontface = "bold", size = 2.5) +
  facet_wrap(~ Region, ncol = 3) +
  theme_minimal() +
  labs(
    title = "Habitat Type vs Management Intensity Interaction by Region",
    subtitle = "Percentage distribution showing how management practices vary across habitat types",
    x = "Habitat Type",
    y = "Percentage within Habitat",
    fill = "Management Category"
  ) +
  theme(
    axis.text.x = element_text(angle = 45, hjust = 1, face = "bold"),
    legend.position = "bottom",
    plot.title = element_text(face = "bold"),
    strip.background = element_rect(fill = "gray90"),
    strip.text = element_text(face = "bold"),
    panel.grid.major.x = element_blank()
  ) +
  scale_fill_brewer(palette = "Spectral", direction = -1)

# Save the plot
ggsave(here("figures","habitat_management_interaction.png"), width = 12, height = 8)
```

```{r}
#| label: tbl-regional-management-summary
#| tbl-cap: "Summary statistics of management practices and habitat distribution across regions."
#| echo: false
#| eval: true
#| output: true

# Create comprehensive summary table
regional_summary <- all_regional_data %>%
  filter(!is.na(Management_Category)) %>%
  group_by(Region) %>%
  summarise(
    n_beaches = n_distinct(Beach),
    pct_unmanaged = round(sum(Management_Category == "Unmanaged", na.rm = TRUE) / n() * 100, 1),
    pct_low_mgmt = round(sum(Management_Category == "Low Management", na.rm = TRUE) / n() * 100, 1),
    pct_mod_mgmt = round(sum(Management_Category == "Moderate Management", na.rm = TRUE) / n() * 100, 1),
    pct_high_mgmt = round(sum(Management_Category == "High Management", na.rm = TRUE) / n() * 100, 1),
    .groups = "drop"
  )

knitr::kable(regional_summary,
             caption = "Regional summary of management practices and intensity distribution",
             format = "markdown",
             col.names = c("Region", "Beaches", "% Unmanaged", "% Low Mgmt",
                          "% Moderate Mgmt", "% High Mgmt"))
```

