## Most Abundant Plant Species Analysis

```{r setup, include=FALSE}
# Global knitr options - controls all code chunks
knitr::opts_chunk$set(
  warning = FALSE,
  message = FALSE,
  echo = FALSE
)
```

This section visualizes the most abundant plant species across the three regions (Tarragona, Barcelona, and Girona). The chart displays the mean abundance of top plant species based on the Braun-Blanquet scale.
```{r}
#| fig-cap: "Distribution of observations across the three regions"
#| echo: false
#| eval: true
#| output: false
# Load necessary libraries
library(tidyverse)
library(ggplot2)
library(gridExtra) # for arranging multiple plots
library(RColorBrewer) # for color palettes

# Load global configuration
source("../../R/global_config.R")

# Load data
load("../../data/all_observations_split.RData")
load("../../data/all_land_cover_data.RData")

# --- Vegetation Pattern Analysis ---

# Function to calculate average abundance for each species in a region
# Converting Braun-Blanquet values to their maximum percentage coverage
calculate_avg_abundance <- function(region_data) {
  # Get species columns - exclude "plot" and "id_beach"
  species_cols <- setdiff(names(region_data), c("plot", "id_beach"))
  
  # Create a new dataframe to store the percentage values
  percentage_data <- region_data
  
  # Process each species column individually to avoid the vectorized operation issues
  for (col in species_cols) {
    percentage_data[[col]] <- sapply(region_data[[col]], function(value) {
      if (is.na(value)) return(0)
      
      # Convert based on Braun-Blanquet scale
      if (value == 0) return(0)
      else if (value == 0.1) return(5)
      else if (value == 0.5) return(5)
      else if (value == 1) return(5)
      else if (value == 2) return(25)
      else if (value == 3) return(50)
      else if (value == 4) return(75)
      else if (value == 5) return(100)
      else return(as.numeric(value))
    })
  }
  
  # Calculate mean percentage for each species
  percentage_data %>%
    summarise(across(all_of(species_cols), mean, na.rm = TRUE)) %>%
    pivot_longer(cols = everything(),
                 names_to = "species",
                 values_to = "mean_percentage") %>%
    arrange(desc(mean_percentage))
}

# Calculate average abundance for each region
girona_abundance <- calculate_avg_abundance(beaches_by_region$Girona)
barcelona_abundance <- calculate_avg_abundance(beaches_by_region$Barcelona)
tarragona_abundance <- calculate_avg_abundance(beaches_by_region$Tarragona)

# Get top 10 most abundant species in each region
top_girona <- girona_abundance %>% slice_head(n = 3)
top_barcelona <- barcelona_abundance %>% slice_head(n = 3)
top_tarragona <- tarragona_abundance %>% slice_head(n = 3)

# Get the union of top species from all regions
top_species <- unique(c(top_girona$species,
                         top_barcelona$species,
                         top_tarragona$species))

# Function to prepare data for plotting
prepare_plot_data <- function(abundance_data, region_name, top_species_list) {
  abundance_data %>%
    filter(species %in% top_species_list) %>%
    mutate(region = region_name)
}

# Combine data from all regions
plot_data <- bind_rows(
  prepare_plot_data(girona_abundance, "Girona", top_species),
  prepare_plot_data(barcelona_abundance, "Barcelona", top_species),
  prepare_plot_data(tarragona_abundance, "Tarragona", top_species)
)
```
```{r}
#| label: fig-regional-distribution
#| fig-cap: "Distribution of observations across the three regions"
#| echo: false
#| eval: true
#| output: true
# Order regions according to our standard order
plot_data <- order_provinces(plot_data, column_name = "region")


# Order regions according to our standard order
plot_data <- order_provinces(plot_data, column_name = "region")

# Create a bar plot of top species by region
p <- ggplot(plot_data, aes(x = reorder(species, mean_percentage), y = mean_percentage, fill = region)) +
  # Add species bars
  geom_bar(stat = "identity", position = "dodge") +
  coord_flip() +
  theme_minimal() +
  labs(title = "Mean Coverage of Top Plant Species by Region",
       x = "Species",
       y = "Mean Coverage (%)",
       fill = "Region") +
  theme(legend.position = "top",
        axis.text.y = element_text(size = 8)) +
  # Use our custom province colors
  scale_fill_manual(values = PROVINCE_COLORS)

# Apply the percentage scale from our global config
p <- apply_percentage_scale(p)
p

# Save the plot
ggsave("../../figures/top_species_by_region.png", width = 12, height = 8)

```

## Plant species richness by coastal region

```{r}
#| label: fig-species-richness
#| fig-cap: "Beach-level species richness distribution across the three coastal regions, showing biodiversity variations between beaches in Tarragona, Barcelona, and Girona"
#| echo: false
#| eval: true
#| output: true
# --- Species Richness Analysis ---

# Calculate species richness (number of species present) for each beach
calculate_beach_richness <- function(region_data) {
  # Get species columns - exclude "plot" and "id_beach"
  species_cols <- setdiff(names(region_data), c("plot", "id_beach"))

  # Group by beach and calculate presence of each species across the entire beach
  region_data %>%
    group_by(id_beach) %>%
    summarise(across(all_of(species_cols), ~ max(., na.rm = TRUE) > 0)) %>%
    # Replace -Inf with FALSE (happens when all values were NA and we used max with na.rm=TRUE)
    mutate(across(all_of(species_cols), ~ ifelse(is.infinite(.), FALSE, .))) %>%
    # Calculate richness as sum of species present
    mutate(richness = rowSums(across(all_of(species_cols))))
}

# Calculate richness for each region at the beach level
girona_richness <- calculate_beach_richness(beaches_by_region$Girona) %>%
  mutate(region = "Girona")
barcelona_richness <- calculate_beach_richness(beaches_by_region$Barcelona) %>%
  mutate(region = "Barcelona")
tarragona_richness <- calculate_beach_richness(beaches_by_region$Tarragona) %>%
  mutate(region = "Tarragona")

# Combine richness data
all_richness <- bind_rows(girona_richness, barcelona_richness, tarragona_richness)

# Order regions according to our standard order
all_richness <- order_provinces(all_richness, column_name = "region")

# Create box plot of species richness by region
ggplot(all_richness, aes(x = region, y = richness, fill = region)) +
  geom_boxplot() +
  theme_minimal() +
  labs(title = "Beach-level species richness across coastal regions",
       x = "Region",
       y = "Number of Species Present per Beach") +
  theme(legend.position = "none") +
  # Use our custom province colors
  scale_fill_manual(values = PROVINCE_COLORS)

# Save the plot
ggsave("../../figures/species_richness_by_region.png", width = 8, height = 6)

```

## Land cover composition

```{r}
#| label: fig-land-cover-50m
#| fig-cap: "Distribution of land cover types within 50m of beaches across the three coastal regions, showing the environmental context of the dune vegetation "
#| echo: false
#| eval: true
#| output: true
# Function to reshape land cover data for plotting
prepare_land_cover <- function(region_data) {
  region_data %>%
    pivot_longer(
      cols = -id_beach,
      names_to = "cover_type",
      values_to = "percentage"
    ) %>%
    # Extract the distance (50m or 100m) from the column name
    mutate(
      distance = ifelse(grepl("^x50m", cover_type), "50m", "100m"),
      # Clean up the cover type name by removing the distance prefix
      cover_type = gsub("^x(50|100)m_(.+)_percent$", "\\2", cover_type)
    )
}

# Prepare land cover data for all regions
girona_land <- prepare_land_cover(land_cover_data$Girona) %>%
  mutate(region = "Girona")
barcelona_land <- prepare_land_cover(land_cover_data$Barcelona) %>%
  mutate(region = "Barcelona")
tarragona_land <- prepare_land_cover(land_cover_data$Tarragona) %>%
  mutate(region = "Tarragona")

# Combine all land cover data
all_land_cover <- bind_rows(girona_land, barcelona_land, tarragona_land)

# Order regions according to our standard order
all_land_cover <- order_provinces(all_land_cover, column_name = "region")

# Calculate average land cover percentages for each region and distance
avg_land_cover <- all_land_cover %>%
  group_by(region, distance, cover_type) %>%
  summarise(
    mean_percentage = mean(percentage, na.rm = TRUE),
    .groups = "drop"
  )

# Ensure regions maintain the consistent order
avg_land_cover <- order_provinces(avg_land_cover, column_name = "region")

# Define a consistent color palette for land cover types
land_cover_colors <- colorRampPalette(brewer.pal(8, "Set3"))(length(unique(avg_land_cover$cover_type)))
names(land_cover_colors) <- unique(avg_land_cover$cover_type)

# Plot land cover composition at 50m by region
ggplot(avg_land_cover %>% filter(distance == "50m"),
       aes(x = region, y = mean_percentage, fill = cover_type)) +
  geom_bar(stat = "identity", position = "stack") +
  theme_minimal() +
  labs(
    title = "Land cover composition within 50m of beaches",
    x = "Region",
    y = "Percentage (%)",
    fill = "Land Cover Type"
  ) +
  scale_fill_manual(values = land_cover_colors) +
  theme(legend.position = "right")

# Save the plot
ggsave("../../figures/land_cover_50m_by_region.png", width = 10, height = 6)
```

```{r}
#| label: fig-land-cover-100m
#| fig-cap: "Distribution of land cover types within 100m of beaches across the three coastal regions, showing the broader environmental context of the dune ecosystems"
#| echo: false
#| eval: true
#| output: true
# Plot land cover composition at 100m by region
ggplot(avg_land_cover %>% filter(distance == "100m"),
       aes(x = region, y = mean_percentage, fill = cover_type)) +
  geom_bar(stat = "identity", position = "stack") +
  theme_minimal() +
  labs(
    title = "Land cover composition within 100m of beaches",
    x = "Region",
    y = "Percentage (%)",
    fill = "Land Cover Type"
  ) +
  scale_fill_manual(values = land_cover_colors) +
  theme(legend.position = "right")

# Save the plot
ggsave("../../figures/land_cover_100m_by_region.png", width = 10, height = 6)
```

```{r}
#| echo: false
#| eval: true
#| output: false
# --- Relationship between land cover and species richness ---

# Join land cover data with species richness data for both 50m and 100m
richness_land_cover_50m <- all_richness %>%
  left_join(
    all_land_cover %>%
      filter(distance == "50m") %>%
      select(id_beach, region, cover_type, percentage),
    by = c("id_beach", "region")
  ) %>%
  mutate(distance = "50m")

richness_land_cover_100m <- all_richness %>%
  left_join(
    all_land_cover %>%
      filter(distance == "100m") %>%
      select(id_beach, region, cover_type, percentage),
    by = c("id_beach", "region")
  ) %>%
  mutate(distance = "100m")

# Combine both datasets
richness_land_cover_combined <- bind_rows(richness_land_cover_50m, richness_land_cover_100m)

# Select the most relevant land cover types for analysis
relevant_cover_types <- c("urban", "forests", "scrubland", "crops", "grassland")

richness_vs_land <- richness_land_cover_combined %>%
  filter(cover_type %in% relevant_cover_types)

# Ensure regions maintain the consistent order
richness_vs_land <- order_provinces(richness_vs_land, column_name = "region")

# Reorder the factor levels for cover_type to control the column order
richness_vs_land$cover_type <- factor(richness_vs_land$cover_type, 
                                     levels = relevant_cover_types)
```

```{r}
#| label: fig-richness-vs-landcover
#| fig-cap: "Relationship between species richness and different land cover types at 50m and 100m distances, comparing how the surrounding environment at different scales impacts dune biodiversity"
#| echo: false
#| eval: true
#| output: true
#| message: false
#| warning: false
#| fig-width: 15
#| fig-height: 8

# Create scatter plots for richness vs. land cover with both distances
# Specify formula explicitly to avoid auto-message
ggplot(richness_vs_land, aes(x = percentage, y = richness, color = region)) +
  geom_point(alpha = 0.7, size = 2) +
  geom_smooth(method = "lm", formula = y ~ x, se = TRUE, linetype = "dashed") +
  # Use facet_grid to create rows for distances and columns for cover types
  facet_grid(distance ~ cover_type) +
  theme_minimal() +
  labs(
    title = "Species Richness vs. Land Cover Types at Different Distances",
    x = "Land Cover Percentage (%)",
    y = "Number of Species Present",
    color = "Region"
  ) +
  # Use our custom province colors
  scale_color_manual(values = PROVINCE_COLORS) +
  # Set x-axis limits to 0-100 for all facets
  scale_x_continuous(limits = c(0, 100), breaks = seq(0, 100, 25)) +
  theme(
    legend.position = "top",
    strip.background = element_rect(fill = "gray90"),
    strip.text = element_text(face = "bold"),
    axis.text.x = element_text(angle = 0),
    panel.spacing = unit(1, "lines"),
    panel.border = element_rect(color = "gray80", fill = NA)
  )

# Save the plot
ggsave("../../figures/richness_vs_land_cover_combined.png", width = 15, height = 8)
```