```{r 06_06_setup, include=FALSE}
# Global knitr options - controls all code chunks
knitr::opts_chunk$set(
  warning = FALSE,
  message = FALSE,
  echo = FALSE
)

# Load necessary libraries
library(tidyverse)
library(ggplot2)
library(vegan)     # For NMDS analysis
library(gridExtra) # For arranging multiple plots
library(RColorBrewer) # For color palettes
library(here)
# Load global configuration
source(here("R","global_config.R"))

# Load data
load(here("data","all_observations_split.RData"))
load(here("data","all_land_cover_data.RData"))

# --- NMDS Analysis for Habitat Classification ---

# Function to prepare species data matrix for NMDS analysis
# Converting Braun-Blanquet values to numeric percentage cover
prepare_nmds_data <- function(region_data) {
  # Get species columns - exclude non-species columns
  species_cols <- setdiff(names(region_data), c("plot", "id_beach"))

  # Create a matrix for NMDS analysis with percentage values
  nmds_matrix <- region_data %>%
    # Convert Braun-Blanquet values to percentages
    mutate(across(all_of(species_cols), bb_to_percentage)) %>%
    # Select only species columns to create the species matrix
    select(all_of(species_cols))

  # Convert to matrix
  as.matrix(nmds_matrix)
}

# Function to identify dominant species for each plot
get_dominant_species <- function(region_data) {
  # Get species columns
  species_cols <- setdiff(names(region_data), c("plot", "id_beach"))

  # Create data frame with dominant species for each plot
  region_data %>%
    # Convert to long format
    pivot_longer(
      cols = all_of(species_cols),
      names_to = "species",
      values_to = "bb_value"
    ) %>%
    # Group by plot and get species with highest BB value
    group_by(plot, id_beach) %>%
    filter(bb_value == max(bb_value, na.rm = TRUE) & !is.na(bb_value) & bb_value > 0) %>%
    # In case of ties, keep first one (or could randomize)
    slice(1) %>%
    ungroup()
}

# Prepare data for each region
girona_matrix <- prepare_nmds_data(beaches_by_region$Girona)
barcelona_matrix <- prepare_nmds_data(beaches_by_region$Barcelona)
tarragona_matrix <- prepare_nmds_data(beaches_by_region$Tarragona)

# Combine all matrices for a comprehensive analysis
all_species_matrix <- rbind(
  girona_matrix,
  barcelona_matrix,
  tarragona_matrix
)

# Create a corresponding region identifier for each row
all_regions <- c(
  rep("Girona", nrow(girona_matrix)),
  rep("Barcelona", nrow(barcelona_matrix)),
  rep("Tarragona", nrow(tarragona_matrix))
)

# Create a corresponding beach identifier for each row
all_beaches <- c(
  beaches_by_region$Girona$id_beach,
  beaches_by_region$Barcelona$id_beach,
  beaches_by_region$Tarragona$id_beach
)

# Prepare dominant species information
girona_dominant <- get_dominant_species(beaches_by_region$Girona) %>%
  mutate(region = "Girona")
barcelona_dominant <- get_dominant_species(beaches_by_region$Barcelona) %>%
  mutate(region = "Barcelona")
tarragona_dominant <- get_dominant_species(beaches_by_region$Tarragona) %>%
  mutate(region = "Tarragona")

# Combine dominant species data
all_dominant_species <- bind_rows(girona_dominant, barcelona_dominant, tarragona_dominant)

# Run the NMDS analysis
# Using Bray-Curtis distance as it's appropriate for community composition data
set.seed(123) # For reproducibility
nmds_result <- metaMDS(
  all_species_matrix,
  distance = "bray",
  k = 2,        # Number of dimensions (2 for easy visualization)
  trymax = 100,  # Maximum number of random starts
  autotransform = FALSE # Data already transformed to percentages
)

# Create a data frame with NMDS results
nmds_data <- data.frame(
  NMDS1 = nmds_result$points[,1],
  NMDS2 = nmds_result$points[,2],
  Region = all_regions,
  Beach = all_beaches
)

# Apply k-means clustering to identify habitat types
# We'll use 4 clusters as mentioned in the context document
set.seed(456) # For reproducibility
kmeans_result <- kmeans(nmds_result$points, centers = 4)
nmds_data$Cluster <- as.factor(kmeans_result$cluster)

# Define habitat type labels based on clusters
habitat_labels <- c(
  "1" = "Front-dune",
  "2" = "Back-dune",
  "3" = "Mixed",
  "4" = "Disturbed"
)

# Map cluster numbers to habitat labels
nmds_data$Habitat <- habitat_labels[nmds_data$Cluster]

# Order regions according to our standard order
nmds_data <- order_provinces(nmds_data, column_name = "Region")

# Extract species scores (weighted average positions in NMDS space)
species_scores <- data.frame(
  species = colnames(all_species_matrix),
  NMDS1 = scores(nmds_result, "species")[,1],
  NMDS2 = scores(nmds_result, "species")[,2]
)

# Get the most important species to label in the plot (high absolute scores)
top_species <- species_scores %>%
  mutate(distance = sqrt(NMDS1^2 + NMDS2^2)) %>%
  arrange(desc(distance)) %>%
  slice_head(n = 10)
```

This section presents the results of a Non-metric Multidimensional Scaling (NMDS) analysis to classify coastal dune vegetation plots into distinct habitat types. NMDS is a powerful ordination technique that represents samples in a low-dimensional space while preserving the ecological distances between them.

```{r}
#| label: fig-nmds-plot
#| fig-cap: "NMDS ordination plot showing the classification of vegetation plots into habitat types based on species composition. Points represent individual plots and are colored by region (Tarragona, Barcelona, Girona) and shaped by identified habitat type."
#| echo: false
#| eval: true
#| output: true
#| fig-width: 12
#| fig-height: 8
#| fig-pos: "H"

# Create NMDS plot with habitat type clusters
p_nmds <- ggplot(nmds_data, aes(x = NMDS1, y = NMDS2)) +
  # Add points colored by region and shaped by habitat type
  geom_point(aes(color = Region, shape = Habitat), size = 3, alpha = 0.8) +
  # Add convex hulls to outline each habitat cluster
  stat_ellipse(aes(group = Habitat, linetype = Habitat),
               type = "norm", level = 0.8, size = 0.8) +
  # Add top species labels
  geom_text(data = top_species,
            aes(x = NMDS1, y = NMDS2, label = species),
            size = 3, fontface = "italic", hjust = -0.1, vjust = -0.1) +
  # Customize appearance
  theme_minimal() +
  labs(
    title = "NMDS Ordination of Coastal Dune Vegetation",
    subtitle = paste("Stress =", round(nmds_result$stress, 3)),
    x = "NMDS1",
    y = "NMDS2",
    color = "Region",
    shape = "Habitat Type"
  ) +
  # Use consistent region colors
  scale_color_manual(values = PROVINCE_COLORS) +
  # Add arrows for top species
  geom_segment(data = top_species,
               aes(x = 0, y = 0, xend = NMDS1, yend = NMDS2),
               arrow = arrow(length = unit(0.2, "cm")),
               alpha = 0.5,
               color = "darkgrey") +
  # Customize theme elements
  theme(
    legend.position = "right",
    legend.box = "vertical",
    legend.title = element_text(face = "bold"),
    panel.grid.minor = element_blank(),
    plot.title = element_text(face = "bold")
  )

print(p_nmds)

# Save the plot
ggsave(here("figures","nmds_habitat_classification.png"), p_nmds, width = 12, height = 8)
```

```{r}
#| label: fig-habitat-region-distribution
#| fig-cap: "Distribution of identified habitat types across the three regions of Catalonia, showing the proportion of plots classified into each habitat category within each region."
#| echo: false
#| eval: true
#| output: true
#| fig-width: 10
#| fig-height: 6
#| fig-pos: "H"

# Calculate the distribution of habitat types by region
habitat_distribution <- nmds_data %>%
  group_by(Region, Habitat) %>%
  summarise(Count = n(), .groups = "drop") %>%
  group_by(Region) %>%
  mutate(Percentage = Count / sum(Count) * 100) %>%
  ungroup()

# Create a stacked bar chart
habitat_distribution %>%
  ggplot(aes(x = Region, y = Percentage, fill = Habitat)) +
  geom_bar(stat = "identity", position = "stack", color = "white") +
  geom_text(aes(label = paste0(round(Percentage, 1), "%")),
            position = position_stack(vjust = 0.5),
            color = "white", fontface = "bold") +
  theme_minimal() +
  labs(
    title = "Distribution of Habitat Types by Region",
    x = "Region",
    y = "Percentage of Plots",
    fill = "Habitat Type"
  ) +
  # Apply custom theme
  theme(
    axis.text.x = element_text(face = "bold"),
    legend.position = "right",
    plot.title = element_text(face = "bold"),
    panel.grid.major.x = element_blank()
  ) +
  # Use a colorblind-friendly palette
  scale_fill_brewer(palette = "Set2")

# Save the plot
ggsave(here("figures","habitat_distribution_by_region.png"), width = 10, height = 6)
```

```{r}
#| label: fig-species-indicators
#| fig-cap: "Indicator species for each habitat type, showing the average abundance of key species across the four identified habitat types in coastal dune ecosystems."
#| echo: false
#| eval: true
#| output: true
#| fig-width: 14
#| fig-height: 8
#| fig-pos: "H"

# Create a mapping between original data and NMDS results
# We'll create a data frame that links beach ID and plot to habitat type
plot_mapping <- data.frame(
  beach_id = all_beaches,
  habitat = nmds_data$Habitat,
  cluster = nmds_data$Cluster,
  row_num = 1:nrow(nmds_data)
)

# Add row identifiers to original data so we can match to NMDS
girona_with_rows <- beaches_by_region$Girona %>%
  mutate(region = "Girona", row_id = 1:nrow(beaches_by_region$Girona))
barcelona_with_rows <- beaches_by_region$Barcelona %>%
  mutate(region = "Barcelona", row_id = (nrow(beaches_by_region$Girona) + 1):(nrow(beaches_by_region$Girona) + nrow(beaches_by_region$Barcelona)))
tarragona_with_rows <- beaches_by_region$Tarragona %>%
  mutate(region = "Tarragona", row_id = (nrow(beaches_by_region$Girona) + nrow(beaches_by_region$Barcelona) + 1):(nrow(beaches_by_region$Girona) + nrow(beaches_by_region$Barcelona) + nrow(beaches_by_region$Tarragona)))

# Combine all regions with row IDs
all_data_with_rows <- bind_rows(girona_with_rows, barcelona_with_rows, tarragona_with_rows)

# Join the dominant species data with habitat information
# First, join the dominant species with the all_data_with_rows to get row_id
dominant_with_data <- all_dominant_species %>%
  left_join(all_data_with_rows %>% select(plot, id_beach, region, row_id),
            by = c("plot", "id_beach", "region"))

# Then join with plot_mapping to get habitat information
dominant_with_clusters <- dominant_with_data %>%
  left_join(plot_mapping %>% select(row_num, habitat, cluster),
            by = c("row_id" = "row_num"))

# Find indicator species for each habitat type
# These are species that are more frequently dominant in a specific habitat
# We'll calculate the average BB value of each species in each habitat type
indicator_species <- dominant_with_clusters %>%
  group_by(habitat, species) %>%
  summarise(
    mean_bb = mean(bb_value, na.rm = TRUE),
    count = n(),
    .groups = "drop"
  ) %>%
  filter(!is.na(habitat)) %>%
  # Keep only species that appear at least twice in a habitat
  filter(count >= 2) %>%
  # For each habitat, get the top 3 indicator species
  group_by(habitat) %>%
  slice_max(order_by = mean_bb, n = 3) %>%
  ungroup() %>%
  # Rename column to match expected names in downstream code
  rename(Habitat = habitat)

# Create a bar plot of indicator species by habitat type
ggplot(indicator_species, aes(x = reorder(species, mean_bb), y = mean_bb, fill = Habitat)) +
  geom_bar(stat = "identity") +
  facet_wrap(~ Habitat, scales = "free_y") +
  coord_flip() +
  theme_minimal() +
  labs(
    title = "Indicator Species for Each Habitat Type",
    subtitle = "Based on species dominance pattern",
    x = "Species",
    y = "Mean Braun-Blanquet Value",
    fill = "Habitat Type"
  ) +
  # Apply Braun-Blanquet scale
  apply_braun_blanquet_scale() +
  theme(
    legend.position = "none",
    strip.background = element_rect(fill = "gray90"),
    strip.text = element_text(face = "bold"),
    axis.text.y = element_text(face = "italic"),
    plot.title = element_text(face = "bold")
  ) +
  # Use color palette
  scale_fill_brewer(palette = "Set2")

# Save the plot
ggsave(here("figures","habitat_indicator_species.png"), width = 14, height = 8)
```
