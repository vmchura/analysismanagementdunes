```{r 06_06_setup, include=FALSE}
# Opciones globales de knitr - controla todos los chunks de código
knitr::opts_chunk$set(
  warning = FALSE,
  message = FALSE,
  echo = FALSE
)

# Cargar librerías necesarias
library(tidyverse)
library(ggplot2)
library(vegan)     # Para análisis NMDS
library(gridExtra) # Para organizar múltiples gráficos
library(RColorBrewer) # Para paletas de colores
library(here)
# Cargar configuración global
source(here("R","global_config.R"))

# Cargar datos
load(here("data","all_observations_split.RData"))
load(here("data","all_land_cover_data.RData"))

# --- Análisis NMDS para Clasificación de Hábitats ---

# Función para preparar matriz de datos de especies para análisis NMDS
# Convirtiendo valores de Braun-Blanquet a cobertura porcentual numérica
prepare_nmds_data <- function(region_data) {
  # Obtener columnas de especies - excluir columnas que no son especies
  species_cols <- setdiff(names(region_data), c("plot", "id_beach"))

  # Crear una matriz para análisis NMDS con valores porcentuales
  nmds_matrix <- region_data %>%
    # Convertir valores de Braun-Blanquet a porcentajes
    mutate(across(all_of(species_cols), bb_to_percentage)) %>%
    # Seleccionar solo columnas de especies para crear la matriz de especies
    select(all_of(species_cols))

  # Convertir a matriz
  as.matrix(nmds_matrix)
}

# Función para identificar especies dominantes para cada parcela
get_dominant_species <- function(region_data) {
  # Obtener columnas de especies
  species_cols <- setdiff(names(region_data), c("plot", "id_beach"))

  # Crear data frame con especies dominantes para cada parcela
  region_data %>%
    # Convertir a formato largo
    pivot_longer(
      cols = all_of(species_cols),
      names_to = "species",
      values_to = "bb_value"
    ) %>%
    # Agrupar por parcela y obtener especies con mayor valor BB
    group_by(plot, id_beach) %>%
    filter(bb_value == max(bb_value, na.rm = TRUE) & !is.na(bb_value) & bb_value > 0) %>%
    # En caso de empates, mantener el primero (o se podría aleatorizar)
    slice(1) %>%
    ungroup()
}

# Preparar datos para cada región
girona_matrix <- prepare_nmds_data(beaches_by_region$Girona)
barcelona_matrix <- prepare_nmds_data(beaches_by_region$Barcelona)
tarragona_matrix <- prepare_nmds_data(beaches_by_region$Tarragona)

# Combinar todas las matrices para un análisis comprensivo
all_species_matrix <- rbind(
  girona_matrix,
  barcelona_matrix,
  tarragona_matrix
)

# Crear un identificador de región correspondiente para cada fila
all_regions <- c(
  rep("Girona", nrow(girona_matrix)),
  rep("Barcelona", nrow(barcelona_matrix)),
  rep("Tarragona", nrow(tarragona_matrix))
)

# Crear un identificador de playa correspondiente para cada fila
all_beaches <- c(
  beaches_by_region$Girona$id_beach,
  beaches_by_region$Barcelona$id_beach,
  beaches_by_region$Tarragona$id_beach
)

# Preparar información de especies dominantes
girona_dominant <- get_dominant_species(beaches_by_region$Girona) %>%
  mutate(region = "Girona")
barcelona_dominant <- get_dominant_species(beaches_by_region$Barcelona) %>%
  mutate(region = "Barcelona")
tarragona_dominant <- get_dominant_species(beaches_by_region$Tarragona) %>%
  mutate(region = "Tarragona")

# Combinar datos de especies dominantes
all_dominant_species <- bind_rows(girona_dominant, barcelona_dominant, tarragona_dominant)

# Ejecutar el análisis NMDS
# Usando distancia de Bray-Curtis ya que es apropiada para datos de composición de comunidades
set.seed(123) # Para reproducibilidad
nmds_result <- metaMDS(
  all_species_matrix,
  distance = "bray",
  k = 2,        # Número de dimensiones (2 para visualización fácil)
  trymax = 100,  # Número máximo de intentos aleatorios
  autotransform = FALSE # Datos ya transformados a porcentajes
)

# Crear un data frame con resultados del NMDS
nmds_data <- data.frame(
  NMDS1 = nmds_result$points[,1],
  NMDS2 = nmds_result$points[,2],
  Region = all_regions,
  Beach = all_beaches
)

# Aplicar agrupamiento k-means para identificar tipos de hábitat
# Usaremos 4 grupos como se menciona en el documento de contexto
set.seed(456) # Para reproducibilidad
kmeans_result <- kmeans(nmds_result$points, centers = 4)
nmds_data$Cluster <- as.factor(kmeans_result$cluster)

# Definir etiquetas de tipos de hábitat basadas en grupos
habitat_labels <- c(
  "1" = "Hábitat 1",
  "2" = "Hábitat 2", 
  "3" = "Hábitat 3",
  "4" = "Hábitat 4"
)

# Mapear números de grupos a etiquetas de hábitat
nmds_data$Habitat <- habitat_labels[nmds_data$Cluster]

# Ordenar regiones según nuestro orden estándar
nmds_data <- order_provinces(nmds_data, column_name = "Region")

# Extraer puntuaciones de especies (posiciones promedio ponderadas en el espacio NMDS)
species_scores <- data.frame(
  species = colnames(all_species_matrix),
  NMDS1 = scores(nmds_result, "species")[,1],
  NMDS2 = scores(nmds_result, "species")[,2]
)

# Obtener las especies más importantes para etiquetar en el gráfico (puntuaciones absolutas altas)
top_species <- species_scores %>%
  mutate(distance = sqrt(NMDS1^2 + NMDS2^2)) %>%
  arrange(desc(distance)) %>%
  slice_head(n = 10)
```

### Clasificación de Hábitats mediante NMDS {#sec-clasificacion-habitats-content}

Análisis de ordenación NMDS para clasificar parcelas de vegetación en 4 tipos de hábitat basados en la composición de especies. Se utilizan 4 grupos para capturar la variabilidad principal de las comunidades dunares.

```{r}
#| label: fig-nmds-plot
#| fig-cap: "Gráfico de ordenación NMDS mostrando la clasificación de parcelas de vegetación en tipos de hábitat basados en la composición de especies. Los puntos representan parcelas individuales y están coloreados por región (Tarragona, Barcelona, Girona) y con formas según el tipo de hábitat identificado."
#| echo: false
#| eval: true
#| output: true
#| fig-width: 12
#| fig-height: 8
#| fig-pos: "H"

# Create NMDS plot with habitat type clusters
p_nmds <- ggplot(nmds_data, aes(x = NMDS1, y = NMDS2)) +
  # Añadir puntos coloreados por región y con formas según el tipo de hábitat
  geom_point(aes(color = Region, shape = Habitat), size = 3, alpha = 0.8) +
  # Añadir envolturas convexas para delinear cada grupo de hábitat
  stat_ellipse(aes(group = Habitat, linetype = Habitat),
               type = "norm", level = 0.8, size = 0.8) +
  # Añadir etiquetas de las principales especies
  geom_text(data = top_species,
            aes(x = NMDS1, y = NMDS2, label = species),
            size = 3, fontface = "italic", hjust = -0.1, vjust = -0.1) +
  # Personalizar apariencia
  theme_minimal() +
  labs(
    title = "Ordenación NMDS de Vegetación\nde Dunas Costeras",
    subtitle = paste("Estrés =", round(nmds_result$stress, 3)),
    x = "NMDS1",
    y = "NMDS2",
    color = "Región",
    shape = "Tipo de Hábitat"
  ) +
  # Usar colores consistentes de región
  scale_color_manual(values = PROVINCE_COLORS) +
  # Añadir flechas para las principales especies
  geom_segment(data = top_species,
               aes(x = 0, y = 0, xend = NMDS1, yend = NMDS2),
               arrow = arrow(length = unit(0.2, "cm")),
               alpha = 0.5,
               color = "darkgrey") +
  # Personalizar elementos del tema
  theme(
    legend.position = "right",
    legend.box = "vertical",
    legend.title = element_text(face = "bold"),
    panel.grid.minor = element_blank(),
    plot.title = element_text(face = "bold", hjust = 0.5, size = 12),
    plot.subtitle = element_text(hjust = 0.5)
  )

print(p_nmds)

# Guardar el gráfico
ggsave(here("figures","nmds_habitat_classification.png"), p_nmds, width = 12, height = 8)
```

La @fig-nmds-plot muestra la clasificación de parcelas en 4 tipos de hábitat. Los hábitats muestran separación espacial clara, con diferentes
especies características en cada grupo.

```{r}
#| label: fig-habitat-region-distribution
#| fig-cap: "Distribución de tipos de hábitat identificados en las tres regiones de Cataluña, mostrando la proporción de parcelas clasificadas en cada categoría de hábitat dentro de cada región."
#| echo: false
#| eval: true
#| output: true
#| fig-width: 10
#| fig-height: 6
#| fig-pos: "H"

# Calcular la distribución de tipos de hábitat por región
habitat_distribution <- nmds_data %>%
  group_by(Region, Habitat) %>%
  summarise(Count = n(), .groups = "drop") %>%
  group_by(Region) %>%
  mutate(Percentage = Count / sum(Count) * 100) %>%
  ungroup()

# Crear un gráfico de barras apiladas
habitat_distribution %>%
  ggplot(aes(x = Region, y = Percentage, fill = Habitat)) +
  geom_bar(stat = "identity", position = "stack", color = "white") +
  geom_text(aes(label = paste0(round(Percentage, 1), "%")),
            position = position_stack(vjust = 0.5),
            color = "white", fontface = "bold") +
  theme_minimal() +
  labs(
    title = "Distribución de Tipos de Hábitat por Región",
    x = "Región",
    y = "Porcentaje de Parcelas",
    fill = "Tipo de Hábitat"
  ) +
  # Aplicar tema personalizado
  theme(
    axis.text.x = element_text(face = "bold"),
    legend.position = "right",
    plot.title = element_text(face = "bold"),
    panel.grid.major.x = element_blank()
  ) +
  # Usar una paleta amigable para daltónicos
  scale_fill_brewer(palette = "Set2")

# Guardar el gráfico
ggsave(here("figures","habitat_distribution_by_region.png"), width = 10, height = 6)
```

La @fig-habitat-region-distribution muestra diferencias en la composición de hábitats entre regiones. Tarragona presenta distribución equilibrada entre los 4 hábitats (23-28% cada uno). Barcelona muestra predominio del Hábitat 2 (38%) y menor presencia del Hábitat 3 (18%). Girona se caracteriza por alta concentración del Hábitat 4 (53%) y baja representación del Hábitat 3 (4%).

```{r}
#| label: fig-species-indicators
#| fig-cap: "Especies indicadoras para cada tipo de hábitat, mostrando la abundancia promedio de especies clave en los cuatro tipos de hábitat identificados en ecosistemas de dunas costeras."
#| echo: false
#| eval: true
#| output: true
#| fig-width: 14
#| fig-height: 8
#| fig-pos: "H"

# Crear un mapeo entre los datos originales y los resultados del NMDS
# Crearemos un data frame que vincule el ID de playa y parcela al tipo de hábitat
plot_mapping <- data.frame(
  beach_id = all_beaches,
  habitat = nmds_data$Habitat,
  cluster = nmds_data$Cluster,
  row_num = 1:nrow(nmds_data)
)

# Añadir identificadores de fila a los datos originales para poder emparejar con NMDS
girona_with_rows <- beaches_by_region$Girona %>%
  mutate(region = "Girona", row_id = 1:nrow(beaches_by_region$Girona))
barcelona_with_rows <- beaches_by_region$Barcelona %>%
  mutate(region = "Barcelona", row_id = (nrow(beaches_by_region$Girona) + 1):(nrow(beaches_by_region$Girona) + nrow(beaches_by_region$Barcelona)))
tarragona_with_rows <- beaches_by_region$Tarragona %>%
  mutate(region = "Tarragona", row_id = (nrow(beaches_by_region$Girona) + nrow(beaches_by_region$Barcelona) + 1):(nrow(beaches_by_region$Girona) + nrow(beaches_by_region$Barcelona) + nrow(beaches_by_region$Tarragona)))

# Combinar todas las regiones con IDs de fila
all_data_with_rows <- bind_rows(girona_with_rows, barcelona_with_rows, tarragona_with_rows)

# Unir los datos de especies dominantes con información de hábitat
# Primero, unir las especies dominantes con all_data_with_rows para obtener row_id
dominant_with_data <- all_dominant_species %>%
  left_join(all_data_with_rows %>% select(plot, id_beach, region, row_id),
            by = c("plot", "id_beach", "region"))

# Luego unir con plot_mapping para obtener información de hábitat
dominant_with_clusters <- dominant_with_data %>%
  left_join(plot_mapping %>% select(row_num, habitat, cluster),
            by = c("row_id" = "row_num"))

# Encontrar especies indicadoras para cada tipo de hábitat
# Estas son especies que son más frecuentemente dominantes en un hábitat específico
# Calcularemos el valor BB promedio de cada especie en cada tipo de hábitat
indicator_species <- dominant_with_clusters %>%
  group_by(habitat, species) %>%
  summarise(
    mean_bb = mean(bb_value, na.rm = TRUE),
    count = n(),
    .groups = "drop"
  ) %>%
  filter(!is.na(habitat)) %>%
  # Mantener solo especies que aparecen al menos dos veces en un hábitat
  filter(count >= 2) %>%
  # Para cada hábitat, obtener las 3 principales especies indicadoras
  group_by(habitat) %>%
  slice_max(order_by = mean_bb, n = 3) %>%
  ungroup() %>%
  # Renombrar columna para coincidir con nombres esperados en código posterior
  rename(Habitat = habitat)

# Crear un gráfico de barras de especies indicadoras por tipo de hábitat
ggplot(indicator_species, aes(x = reorder(species, mean_bb), y = mean_bb, fill = Habitat)) +
  geom_bar(stat = "identity") +
  facet_wrap(~ Habitat, scales = "free_y") +
  coord_flip() +
  theme_minimal() +
  labs(
    title = "Especies Indicadoras para Cada Tipo de Hábitat",
    subtitle = "Basado en el patrón de dominancia de especies",
    x = "Especies",
    y = "Valor Medio de Braun-Blanquet",
    fill = "Tipo de Hábitat"
  ) +
  # Aplicar escala Braun-Blanquet
  apply_braun_blanquet_scale() +
  theme(
    legend.position = "none",
    strip.background = element_rect(fill = "gray90"),
    strip.text = element_text(face = "bold"),
    axis.text.y = element_text(face = "italic"),
    plot.title = element_text(face = "bold")
  ) +
  # Usar paleta de colores
  scale_fill_brewer(palette = "Set2")

# Guardar el gráfico
ggsave(here("figures","habitat_indicator_species.png"), width = 14, height = 8)
```

La @fig-species-indicators identifica las especies características de cada hábitat. Hábitat 1: *Lotus creticus* (cuernecillo marino), *Parapholis filiformis*. Hábitat 2: *Ononis natrix* (melgó), *Asphodelus aestivus* (gamón). Hábitat 3: *Juncus acutus* (junco marino), *Eryngium barrelieri*. Hábitat 4: *Taraxacum officinale* (diente de león), *Medicago marina* (alfalfa marina).

Las especies indicadoras muestran valores de Braun-Blanquet entre 2-4, indicando coberturas medias a altas en sus hábitats respectivos.
