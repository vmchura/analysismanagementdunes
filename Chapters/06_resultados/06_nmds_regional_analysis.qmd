```{r 06_08_setup, include=FALSE}
# Global knitr options - controls all code chunks
knitr::opts_chunk$set(
  warning = FALSE,
  message = FALSE,
  echo = FALSE
)

# Load necessary libraries
library(tidyverse)
library(ggplot2)
library(vegan)     # For NMDS analysis
library(gridExtra) # For arranging multiple plots
library(RColorBrewer) # For color palettes
library(patchwork)  # For combining plots

# Load global configuration
source("../R/global_config.R")

# Load data
load("../data/all_observations_split.RData")
load("../data/all_land_cover_data.RData")

# --- NMDS Analysis for Habitat Classification by Region ---

# Function to prepare species data matrix for NMDS analysis
# Converting Braun-Blanquet values to numeric percentage cover
prepare_nmds_data <- function(region_data) {
  # Get species columns - exclude non-species columns
  species_cols <- setdiff(names(region_data), c("plot", "id_beach"))

  # Create a matrix for NMDS analysis with percentage values
  nmds_matrix <- region_data %>%
    # Convert Braun-Blanquet values to percentages
    mutate(across(all_of(species_cols), bb_to_percentage)) %>%
    # Select only species columns to create the species matrix
    select(all_of(species_cols))

  # Convert to matrix
  as.matrix(nmds_matrix)
}

# Function to identify dominant species for each plot
get_dominant_species <- function(region_data) {
  # Get species columns
  species_cols <- setdiff(names(region_data), c("plot", "id_beach"))

  # Create data frame with dominant species for each plot
  region_data %>%
    # Convert to long format
    pivot_longer(
      cols = all_of(species_cols),
      names_to = "species",
      values_to = "bb_value"
    ) %>%
    # Group by plot and get species with highest BB value
    group_by(plot, id_beach) %>%
    filter(bb_value == max(bb_value, na.rm = TRUE) & !is.na(bb_value) & bb_value > 0) %>%
    # In case of ties, keep first one (or could randomize)
    slice(1) %>%
    ungroup()
}

# Function to run NMDS analysis for a single region
run_region_nmds <- function(region_data, region_name) {
  # Prepare species matrix
  species_matrix <- prepare_nmds_data(region_data)
  
  # Run NMDS analysis
  set.seed(123) # For reproducibility
  nmds_result <- metaMDS(
    species_matrix,
    distance = "bray",
    k = 2,        # Number of dimensions (2 for easy visualization)
    trymax = 100,  # Maximum number of random starts
    autotransform = FALSE # Data already transformed to percentages
  )
  
  # Create a data frame with NMDS results
  nmds_data <- data.frame(
    NMDS1 = nmds_result$points[,1],
    NMDS2 = nmds_result$points[,2],
    Beach = region_data$id_beach
  )
  
  # Apply k-means clustering to identify habitat types
  # We'll use 4 clusters as in the main analysis
  set.seed(456) # For reproducibility
  kmeans_result <- kmeans(nmds_result$points, centers = 4)
  nmds_data$Cluster <- as.factor(kmeans_result$cluster)
  
  # Define habitat type labels based on clusters
  habitat_labels <- c(
    "1" = "Front-dune",
    "2" = "Back-dune",
    "3" = "Mixed",
    "4" = "Disturbed"
  )
  
  # Map cluster numbers to habitat labels
  nmds_data$Habitat <- habitat_labels[nmds_data$Cluster]
  
  # Extract species scores
  species_scores <- data.frame(
    species = colnames(species_matrix),
    NMDS1 = scores(nmds_result, "species")[,1],
    NMDS2 = scores(nmds_result, "species")[,2]
  )
  
  # Get the most important species to label in the plot (high absolute scores)
  top_species <- species_scores %>%
    mutate(distance = sqrt(NMDS1^2 + NMDS2^2)) %>%
    arrange(desc(distance)) %>%
    slice_head(n = 8)  # Limiting to 8 for cleaner region-specific plots
  
  # Create the NMDS plot
  p_nmds <- ggplot(nmds_data, aes(x = NMDS1, y = NMDS2)) +
    # Add points colored by habitat type
    geom_point(aes(shape = Habitat, color = Habitat), size = 3, alpha = 0.8) +
    # Add convex hulls to outline each habitat cluster
    stat_ellipse(aes(group = Habitat, color = Habitat),
                 type = "norm", level = 0.8, size = 0.8) +
    # Add top species labels
    geom_text(data = top_species,
              aes(x = NMDS1, y = NMDS2, label = species),
              size = 3, fontface = "italic", hjust = -0.1, vjust = -0.1) +
    # Customize appearance
    theme_minimal() +
    labs(
      title = paste("NMDS Ordination of Coastal Dune Vegetation -", region_name),
      subtitle = paste("Stress =", round(nmds_result$stress, 3)),
      x = "NMDS1",
      y = "NMDS2",
      color = "Habitat Type",
      shape = "Habitat Type"
    ) +
    # Use a consistent color palette for habitat types
    scale_color_brewer(palette = "Set2") +
    # Add arrows for top species
    geom_segment(data = top_species,
                 aes(x = 0, y = 0, xend = NMDS1, yend = NMDS2),
                 arrow = arrow(length = unit(0.2, "cm")),
                 alpha = 0.5,
                 color = "darkgrey") +
    # Customize theme elements
    theme(
      legend.position = "right",
      legend.box = "vertical",
      legend.title = element_text(face = "bold"),
      panel.grid.minor = element_blank(),
      plot.title = element_text(face = "bold", size = 11)
    )
  
  return(list(
    plot = p_nmds,
    data = nmds_data,
    species = top_species,
    result = nmds_result
  ))
}

# Run NMDS analysis for each region
tarragona_nmds <- run_region_nmds(beaches_by_region$Tarragona, "Tarragona")
barcelona_nmds <- run_region_nmds(beaches_by_region$Barcelona, "Barcelona")
girona_nmds <- run_region_nmds(beaches_by_region$Girona, "Girona")

# Calculate habitat distribution by region
calculate_habitat_distribution <- function(nmds_data, region_name) {
  nmds_data$data %>%
    group_by(Habitat) %>%
    summarise(Count = n(), .groups = "drop") %>%
    mutate(
      Percentage = Count / sum(Count) * 100,
      Region = region_name
    )
}

tarragona_distribution <- calculate_habitat_distribution(tarragona_nmds, "Tarragona")
barcelona_distribution <- calculate_habitat_distribution(barcelona_nmds, "Barcelona")
girona_distribution <- calculate_habitat_distribution(girona_nmds, "Girona")

# Combine habitat distribution data
all_habitat_distribution <- bind_rows(
  tarragona_distribution,
  barcelona_distribution,
  girona_distribution
)

# Order regions
all_habitat_distribution <- all_habitat_distribution %>%
  mutate(Region = factor(Region, levels = PROVINCE_ORDER))
```

This section presents a detailed Non-metric Multidimensional Scaling (NMDS) analysis of coastal dune vegetation for each of the three Catalan regions: Tarragona, Barcelona, and Girona. By analyzing each region separately, we can identify region-specific habitat patterns and characteristic species assemblages.

```{r}
#| label: fig-region-nmds-plots
#| fig-cap: "NMDS ordination plots showing the classification of vegetation plots into habitat types for each region: Tarragona, Barcelona, and Girona. Points represent individual plots and are colored by identified habitat type, while arrows and text indicate influential species."
#| echo: false
#| eval: true
#| output: true
#| fig-width: 14
#| fig-height: 16
#| fig-pos: "H"

# Combine all three plots using patchwork
combined_plot <- tarragona_nmds$plot / barcelona_nmds$plot / girona_nmds$plot +
  plot_layout(ncol = 1, heights = c(1, 1, 1)) +
  plot_annotation(
    title = "Region-Specific NMDS Ordination of Coastal Dune Vegetation",
    theme = theme(plot.title = element_text(face = "bold", hjust = 0.5, size = 14))
  )

print(combined_plot)

# Save the plot
ggsave("../figures/nmds_regional_analysis.png", combined_plot, width = 14, height = 16)
```

```{r}
#| label: fig-region-habitat-distribution
#| fig-cap: "Distribution of identified habitat types within each region, showing the percentage of plots classified into each habitat category within Tarragona, Barcelona, and Girona."
#| echo: false
#| eval: true
#| output: true
#| fig-width: 12
#| fig-height: 8
#| fig-pos: "H"

# Create a stacked bar chart
all_habitat_distribution %>%
  ggplot(aes(x = Region, y = Percentage, fill = Habitat)) +
  geom_bar(stat = "identity", position = "stack", color = "white") +
  geom_text(aes(label = paste0(round(Percentage, 1), "%")),
            position = position_stack(vjust = 0.5),
            color = "white", fontface = "bold") +
  theme_minimal() +
  labs(
    title = "Distribution of Habitat Types within Each Region",
    x = "Region",
    y = "Percentage of Plots",
    fill = "Habitat Type"
  ) +
  # Apply custom theme
  theme(
    axis.text.x = element_text(face = "bold"),
    legend.position = "right",
    plot.title = element_text(face = "bold"),
    panel.grid.major.x = element_blank()
  ) +
  # Use a colorblind-friendly palette and consistent region colors
  scale_fill_brewer(palette = "Set2") +
  scale_x_discrete(limits = PROVINCE_ORDER)

# Save the plot
ggsave("../figures/regional_habitat_distribution.png", width = 12, height = 8)
```

