```{r 07_07_setup, include=FALSE}
# Global knitr options - controls all code chunks
knitr::opts_chunk$set(
  warning = FALSE,
  message = FALSE,
  echo = FALSE
)

# Load necessary libraries
library(tidyverse)
library(ggplot2)
library(vegan)     # For CCA analysis
library(gridExtra) # For arranging multiple plots
library(RColorBrewer) # For color palettes
library(patchwork)  # For combining plots
library(ggrepel)   # For non-overlapping text labels
library(here)
# Load global configuration
source(here("R","global_config.R"))

# Load data
load(here("data","all_observations_split.RData"))
load(here("data","all_land_cover_data.RData"))

# --- Canonical Correspondence Analysis (CCA) ---

# Function to prepare species data matrix for CCA analysis by region
# Aggregates plot-level data to beach-level to match environmental data scale
prepare_species_matrix <- function(region_data) {
  # Get species columns - exclude non-species columns (plot, id_beach, region)
  non_species_cols <- c("plot", "id_beach", "region")
  species_cols <- setdiff(names(region_data), non_species_cols)
  
  # Aggregate species data by beach (calculate mean cover per beach)
  species_by_beach <- region_data %>%
    # Convert Braun-Blanquet values to percentages first
    mutate(across(all_of(species_cols), bb_to_percentage)) %>%
    # Group by beach and calculate mean species cover
    group_by(id_beach) %>%
    summarise(across(all_of(species_cols), ~ mean(.x, na.rm = TRUE)), .groups = "drop") %>%
    # Keep id_beach for matching with environmental data
    arrange(id_beach)
  
  # Extract just the species columns for the matrix
  species_matrix <- species_by_beach %>%
    select(all_of(species_cols)) %>%
    as.matrix()
  
  # Remove species that are never present across all beaches
  species_present <- colSums(species_matrix) > 0
  species_matrix_final <- species_matrix[, species_present, drop = FALSE]
  
  # Return both the matrix and the beach IDs for matching
  return(list(
    matrix = species_matrix_final,
    beach_ids = species_by_beach$id_beach
  ))
}

# Function to prepare environmental (land cover) data by region
prepare_env_matrix <- function(land_cover_region_data, region_species_data) {
  # Get the beach IDs from the species data
  beach_ids <- region_species_data$id_beach
  
  # Get land cover data for the beaches in our species data
  env_data <- land_cover_region_data %>%
    filter(id_beach %in% beach_ids) %>%
    arrange(id_beach)
  
  # Select relevant land cover variables
  # Focus on the most ecologically meaningful variables at 50m distance
  land_cover_cols <- grep("^x50m_.*_percent$", names(env_data), value = TRUE)
  
  # Remove variables with very low variation or all zeros
  env_matrix <- env_data %>%
    select(id_beach, all_of(land_cover_cols)) %>%
    # Remove columns that are all zero or have very low variance
    select(where(~ var(., na.rm = TRUE) > 0.01))
  
  # Clean up column names for better readability
  numeric_cols <- setdiff(names(env_matrix), "id_beach")
  names(env_matrix)[names(env_matrix) %in% numeric_cols] <- 
    gsub("^x50m_(.*)_percent$", "\\1", numeric_cols)
  names(env_matrix) <- gsub("_", " ", names(env_matrix))
  names(env_matrix) <- tools::toTitleCase(names(env_matrix))
  names(env_matrix)[names(env_matrix) == "Id Beach"] <- "id_beach"
  
  return(env_matrix)
}
```
```{r}
#| echo: false
#| eval: true
#| results: 'hide'
#| message: false
#| warning: false
# Function to run CCA analysis for a region
run_cca_analysis <- function(region_data, land_cover_region_data, region_name) {
  # Check if we have enough data
  if(nrow(region_data) < 3) {
    warning(paste("Not enough data for CCA analysis in", region_name))
    return(NULL)
  }
  
  # Prepare species matrix (aggregated by beach)
  species_result <- prepare_species_matrix(region_data)
  species_matrix <- species_result$matrix
  species_beach_ids <- species_result$beach_ids
  
  if(ncol(species_matrix) < 2) {
    warning(paste("Not enough species for CCA analysis in", region_name))
    return(NULL)
  }
  
  # Prepare environmental matrix
  env_matrix <- prepare_env_matrix(land_cover_region_data, region_data)
  
  # Match environmental data to the aggregated species data
  env_matrix_matched <- env_matrix %>% 
    filter(id_beach %in% species_beach_ids) %>%
    arrange(id_beach)
  
  # Ensure both datasets have the same beaches in the same order
  common_beaches <- intersect(species_beach_ids, env_matrix_matched$id_beach)
  
  if(length(common_beaches) < 3) {
    warning(paste("Not enough matching beaches for CCA analysis in", region_name))
    return(NULL)
  }
  
  # Filter both datasets to common beaches and ensure same order
  beach_order <- sort(common_beaches)
  
  # Reorder species matrix to match beach order
  species_order <- match(beach_order, species_beach_ids)
  species_matrix_final <- species_matrix[species_order, , drop = FALSE]
  
  # Reorder environmental matrix to match beach order
  env_matrix_final <- env_matrix_matched %>% 
    filter(id_beach %in% beach_order) %>%
    arrange(id_beach)
  
  # Remove id_beach from environmental matrix for analysis
  env_vars <- env_matrix_final %>% select(-id_beach)
  
  # Remove environmental variables with zero variance
  env_vars <- env_vars[, sapply(env_vars, var, na.rm = TRUE) > 0, drop = FALSE]
  
  if(ncol(env_vars) == 0) {
    warning(paste("No environmental variables with variation found in", region_name))
    return(NULL)
  }
  
  # Final check: ensure both matrices have the same number of rows
  if(nrow(species_matrix_final) != nrow(env_vars)) {
    warning(paste("Final mismatch between species and environmental data rows in", region_name,
                  "- Species:", nrow(species_matrix_final), "Environmental:", nrow(env_vars)))
    return(NULL)
  }
  
  # Run CCA
  tryCatch({
    cca_result <- cca(species_matrix_final ~ ., data = env_vars)
    
    # Calculate explained variance
    eigenvals <- eigenvals(cca_result)
    total_inertia <- sum(eigenvals)
    constrained_inertia <- sum(eigenvals[1:min(length(eigenvals), ncol(env_vars))])
    explained_variance <- constrained_inertia / total_inertia * 100
    
    return(list(
      cca = cca_result,
      species_matrix = species_matrix_final,
      env_matrix = env_vars,
      explained_variance = explained_variance,
      beach_ids = beach_order,
      region = region_name
    ))
  }, error = function(e) {
    warning(paste("CCA analysis failed for", region_name, ":", e$message))
    return(NULL)
  })
}
```
```{r}
#| echo: false
#| eval: true
#| results: 'hide'
#| message: false
#| warning: false
# Run CCA for each region
girona_cca <- run_cca_analysis(beaches_by_region$Girona, land_cover_data$Girona, "Girona")
barcelona_cca <- run_cca_analysis(beaches_by_region$Barcelona, land_cover_data$Barcelona, "Barcelona")
tarragona_cca <- run_cca_analysis(beaches_by_region$Tarragona, land_cover_data$Tarragona, "Tarragona")

# Combine all regions for a comprehensive analysis
# Prepare combined species matrix
all_species_data <- bind_rows(
  beaches_by_region$Girona %>% mutate(region = "Girona"),
  beaches_by_region$Barcelona %>% mutate(region = "Barcelona"),
  beaches_by_region$Tarragona %>% mutate(region = "Tarragona")
)

# Prepare combined land cover data
all_land_cover <- bind_rows(
  land_cover_data$Girona %>% mutate(region = "Girona"),
  land_cover_data$Barcelona %>% mutate(region = "Barcelona"),
  land_cover_data$Tarragona %>% mutate(region = "Tarragona")
)

# Run combined CCA
combined_cca <- run_cca_analysis(all_species_data, all_land_cover, "Combined")

# Function to create CCA biplot
create_cca_biplot <- function(cca_analysis, title_suffix = "") {
  if(is.null(cca_analysis)) return(NULL)
  
  cca_result <- cca_analysis$cca
  
  # Extract site scores (plots)
  site_scores <- data.frame(
    CCA1 = scores(cca_result, display = "sites")[, 1],
    CCA2 = scores(cca_result, display = "sites")[, 2],
    Beach = cca_analysis$beach_ids
  )
  
  # Extract species scores
  species_scores <- data.frame(
    CCA1 = scores(cca_result, display = "species")[, 1],
    CCA2 = scores(cca_result, display = "species")[, 2],
    Species = rownames(scores(cca_result, display = "species"))
  )
  
  # Extract environmental variable scores (biplot arrows)
  env_scores <- data.frame(
    CCA1 = scores(cca_result, display = "bp")[, 1],
    CCA2 = scores(cca_result, display = "bp")[, 2],
    Variable = rownames(scores(cca_result, display = "bp"))
  )
  
  # Select top species by distance from origin for labeling
  species_scores$distance <- sqrt(species_scores$CCA1^2 + species_scores$CCA2^2)
  top_species <- species_scores %>%
    arrange(desc(distance)) %>%
    slice_head(n = 8)
  
  # Create the biplot
  p <- ggplot() +
    # Add site points
    geom_point(data = site_scores, aes(x = CCA1, y = CCA2), 
               color = "blue", alpha = 0.6, size = 5) +
    # Add environmental arrows
    geom_segment(data = env_scores, 
                 aes(x = 0, y = 0, xend = CCA1 * 2, yend = CCA2 * 2),
                 arrow = arrow(length = unit(0.8, "cm")), 
                 color = "red", size = 2, alpha = 0.8) +
    # Add environmental variable labels with repelling
    ggrepel::geom_text_repel(data = env_scores, 
              aes(x = CCA1 * 2.3, y = CCA2 * 2.3, label = Variable),
              color = "red", fontface = "bold", size = 8,
              max.overlaps = Inf,
              box.padding = 0.5,
              point.padding = 0.3,
              segment.color = "red",
              segment.alpha = 0.5) +
    # Add top species points
    geom_point(data = top_species, aes(x = CCA1, y = CCA2), 
               color = "darkgreen", alpha = 0.8, size = 4) +
    # Add top species labels with repelling to avoid overlap
    ggrepel::geom_text_repel(data = top_species, 
              aes(x = CCA1, y = CCA2, label = Species),
              color = "darkgreen", fontface = "italic", size = 6,
              max.overlaps = Inf, 
              box.padding = 0.5,
              point.padding = 0.3,
              segment.color = "darkgreen",
              segment.alpha = 0.5) +
    # Customize appearance
    theme_minimal() +
    labs(
      title = paste("CCA Biplot:", cca_analysis$region, title_suffix),
      subtitle = paste("Explained variance:", round(cca_analysis$explained_variance, 1), "%"),
      x = paste("CCA1 (", round(100 * eigenvals(cca_result)[1] / sum(eigenvals(cca_result)), 1), "%)", sep = ""),
      y = paste("CCA2 (", round(100 * eigenvals(cca_result)[2] / sum(eigenvals(cca_result)), 1), "%)", sep = "")
    ) +
    theme(
      plot.title = element_text(face = "bold", size = 24),
      plot.subtitle = element_text(size = 18),
      axis.title.x = element_text(size = 16),
      axis.title.y = element_text(size = 16),
      axis.text.x = element_text(size = 14),
      axis.text.y = element_text(size = 14),
      panel.grid.minor = element_blank(),
      aspect.ratio = 1  # This makes the plot square
    )
  
  return(p)
}

# Function to test significance of environmental variables
test_env_significance <- function(cca_analysis) {
  if(is.null(cca_analysis)) return(NULL)
  
  # Test overall model significance
  model_test <- anova(cca_analysis$cca, permutations = 999)
  
  # Test individual variable significance
  var_test <- anova(cca_analysis$cca, by = "terms", permutations = 999)
  
  return(list(
    model = model_test,
    variables = var_test
  ))
}

# Test significance for each region
girona_sig <- test_env_significance(girona_cca)
barcelona_sig <- test_env_significance(barcelona_cca)
tarragona_sig <- test_env_significance(tarragona_cca)
combined_sig <- test_env_significance(combined_cca)
```

This section presents the results of Canonical Correspondence Analysis (CCA) to explore the relationships between coastal dune vegetation composition and land cover variables by region. CCA is a constrained ordination technique that directly relates species composition to environmental gradients, helping us understand which land cover factors best explain vegetation patterns in each region (Girona, Barcelona, and Tarragona).

**Methodological Note**: The analysis aggregates plot-level species data to beach-level by calculating mean species cover per beach. This approach ensures that the species matrix matches the scale of the environmental data (one observation per beach) and avoids pseudoreplication issues that would arise from duplicating environmental values for multiple plots within the same beach.

```{r}
#| label: fig-cca-combined
#| fig-cap: "CCA biplot showing the relationship between vegetation composition and land cover variables across all coastal dune sites. Blue points represent sampling plots, red arrows show environmental gradients, and green points indicate key species. Arrow length indicates the strength of the environmental gradient."
#| echo: false
#| eval: true
#| output: true
#| fig-width: 20
#| fig-height: 20
#| fig-pos: "H"

# Create and display the combined CCA biplot
if(!is.null(combined_cca)) {
  p_combined <- create_cca_biplot(combined_cca, "- All Regions")
  print(p_combined)
  
  # Save the plot
  ggsave(here("figures","cca_combined_analysis.png"), p_combined, width = 12, height = 8)
}
```

```{r}
#| label: fig-cca-regional
#| fig-cap: "Regional CCA biplots showing how vegetation-environment relationships vary across the three coastal regions of Catalonia. Each plot shows the specific land cover gradients that structure vegetation communities in each region. Red arrows represent environmental gradients (land cover variables), green points and labels show plant species, and blue points represent sampling sites (beaches). Longer arrows indicate stronger environmental gradients, and species positioned closer to arrow tips are more strongly associated with those environmental conditions."
#| echo: false
#| eval: true
#| results: 'hide'
#| message: false
#| warning: false
#| output: true
#| fig-width: 15
#| fig-height: 45
#| fig-pos: "H"

# Create regional CCA biplots
regional_plots <- list()

if(!is.null(girona_cca)) {
  regional_plots$girona <- create_cca_biplot(girona_cca)
}

if(!is.null(barcelona_cca)) {
  regional_plots$barcelona <- create_cca_biplot(barcelona_cca)
}

if(!is.null(tarragona_cca)) {
  regional_plots$tarragona <- create_cca_biplot(tarragona_cca)
}

# Combine regional plots
if(length(regional_plots) > 0) {
  # Filter out NULL plots
  valid_plots <- regional_plots[!sapply(regional_plots, is.null)]
  
  if(length(valid_plots) > 0) {
    if(length(valid_plots) == 3) {
      combined_regional <- valid_plots$girona / valid_plots$barcelona / valid_plots$tarragona
    } else if(length(valid_plots) == 2) {
      combined_regional <- valid_plots[[1]] / valid_plots[[2]]
    } else {
      combined_regional <- valid_plots[[1]]
    }
    
    print(combined_regional)
    
    # Save the combined regional plot
    ggsave(here("figures","cca_regional_analysis.png"), combined_regional,
           width = 14, height = 12)
  }
} else {
  cat("No regional CCA analyses could be performed.\n")
}
```

```{r}
#| label: tbl-cca-summary
#| tbl-cap: "Summary of CCA results showing the variance explained by land cover variables in each region and the overall significance of the species-environment relationships."
#| echo: false
#| eval: true
#| results: 'hide'
#| message: false
#| warning: false
#| output: true

# Create summary table of CCA results
cca_summary <- data.frame(
  Region = character(),
  Explained_Variance_Percent = numeric(),
  Num_Environmental_Variables = integer(),
  Num_Species = integer(),
  Model_F_Value = numeric(),
  Model_P_Value = numeric(),
  stringsAsFactors = FALSE
)

# Helper function to extract significance info
extract_sig_info <- function(sig_test) {
  if(is.null(sig_test) || is.null(sig_test$model)) {
    return(list(f_val = NA, p_val = NA))
  }
  
  return(list(
    f_val = sig_test$model$F[1],
    p_val = sig_test$model$`Pr(>F)`[1]
  ))
}

# Add data for each region
regions <- list(
  list(name = "Girona", cca = girona_cca, sig = girona_sig),
  list(name = "Barcelona", cca = barcelona_cca, sig = barcelona_sig),
  list(name = "Tarragona", cca = tarragona_cca, sig = tarragona_sig),
  list(name = "Combined", cca = combined_cca, sig = combined_sig)
)

for(region in regions) {
  if(!is.null(region$cca)) {
    sig_info <- extract_sig_info(region$sig)
    
    cca_summary <- rbind(cca_summary, data.frame(
      Region = region$name,
      Explained_Variance_Percent = round(region$cca$explained_variance, 1),
      Num_Environmental_Variables = ncol(region$cca$env_matrix),
      Num_Species = ncol(region$cca$species_matrix),
      Model_F_Value = round(sig_info$f_val, 2),
      Model_P_Value = round(sig_info$p_val, 3),
      stringsAsFactors = FALSE
    ))
  }
}

# Display the table
if(nrow(cca_summary) > 0) {
  knitr::kable(cca_summary, 
               col.names = c("Region", "Explained Variance (%)", "Env. Variables", 
                           "Species", "F-value", "P-value"),
               align = c("l", "c", "c", "c", "c", "c"))
}
```

```{r}
#| label: tbl-env-variables
#| tbl-cap: "Significance of individual environmental variables in the combined CCA model, showing which land cover types are most important for explaining vegetation patterns."
#| echo: false
#| eval: true
#| results: 'hide'
#| message: false
#| warning: false
#| output: true

# Create table of environmental variable significance
if(!is.null(combined_sig) && !is.null(combined_sig$variables)) {
  env_var_table <- data.frame(
    Environmental_Variable = rownames(combined_sig$variables),
    F_Value = round(combined_sig$variables$F, 2),
    P_Value = round(combined_sig$variables$`Pr(>F)`, 3),
    Significance = ifelse(combined_sig$variables$`Pr(>F)` < 0.001, "***",
                         ifelse(combined_sig$variables$`Pr(>F)` < 0.01, "**",
                               ifelse(combined_sig$variables$`Pr(>F)` < 0.05, "*",
                                     ifelse(combined_sig$variables$`Pr(>F)` < 0.1, ".", ""))))
  )
  
  # Remove the 'Residual' row if it exists
  env_var_table <- env_var_table[!is.na(env_var_table$F_Value), ]
  
  # Sort by F-value (descending)
  env_var_table <- env_var_table[order(-env_var_table$F_Value), ]
  
  knitr::kable(env_var_table,
               col.names = c("Environmental Variable", "F-value", "P-value", "Significance"),
               align = c("l", "c", "c", "c"),
               caption = "Significance codes: *** p<0.001, ** p<0.01, * p<0.05, . p<0.1")
} else {
  cat("Environmental variable significance test results not available.\n")
}
```

```{r}
#| label: fig-species-environment-associations
#| fig-cap: "Species-environment associations from CCA analysis, showing which species are most strongly associated with specific land cover types. Species positioned closer to environmental arrows are more strongly associated with those land cover variables."
#| echo: false
#| eval: true
#| results: 'hide'
#| message: false
#| warning: false
#| output: true
#| fig-width: 20
#| fig-height: 20
#| fig-pos: "H"

# Create a detailed species-environment association plot
if(!is.null(combined_cca)) {
  cca_result <- combined_cca$cca
  
  # Extract all species scores (not just top ones)
  all_species_scores <- data.frame(
    CCA1 = scores(cca_result, display = "species")[, 1],
    CCA2 = scores(cca_result, display = "species")[, 2],
    Species = rownames(scores(cca_result, display = "species"))
  )
  
  # Calculate distance from origin for each species
  all_species_scores$distance <- sqrt(all_species_scores$CCA1^2 + all_species_scores$CCA2^2)
  
  # Get top species for labeling (those with strongest associations)
  top_species_detailed <- all_species_scores %>%
    arrange(desc(distance)) %>%
    slice_head(n = 12)
  
  # Extract environmental variable scores
  env_scores_detailed <- data.frame(
    CCA1 = scores(cca_result, display = "bp")[, 1],
    CCA2 = scores(cca_result, display = "bp")[, 2],
    Variable = rownames(scores(cca_result, display = "bp"))
  )
  
  # Create detailed association plot
  p_associations <- ggplot() +
    # Add all species points (small, semi-transparent)
    geom_point(data = all_species_scores, aes(x = CCA1, y = CCA2), 
               color = "lightgreen", alpha = 0.4, size = 2) +
    # Add top species points (larger, more visible)
    geom_point(data = top_species_detailed, aes(x = CCA1, y = CCA2), 
               color = "darkgreen", alpha = 0.8, size = 4) +
    # Add species labels for top species with repelling
    ggrepel::geom_text_repel(data = top_species_detailed, 
              aes(x = CCA1, y = CCA2, label = Species),
              color = "darkgreen", fontface = "italic", size = 8,
              max.overlaps = Inf,
              box.padding = 0.5,
              point.padding = 0.3,
              segment.color = "darkgreen",
              segment.alpha = 0.5) +
    # Add environmental arrows (thicker)
    geom_segment(data = env_scores_detailed, 
                 aes(x = 0, y = 0, xend = CCA1 * 2.5, yend = CCA2 * 2.5),
                 arrow = arrow(length = unit(1.0, "cm")), 
                 color = "red", size = 2.5, alpha = 0.9) +
    # Add environmental variable labels with repelling
    ggrepel::geom_text_repel(data = env_scores_detailed, 
              aes(x = CCA1 * 2.8, y = CCA2 * 2.8, label = Variable),
              color = "red", fontface = "bold", size = 10,
              max.overlaps = Inf,
              box.padding = 0.5,
              point.padding = 0.3,
              segment.color = "red",
              segment.alpha = 0.5) +
    # Add origin lines
    geom_hline(yintercept = 0, linetype = "dashed", alpha = 0.5) +
    geom_vline(xintercept = 0, linetype = "dashed", alpha = 0.5) +
    # Customize appearance
    theme_minimal() +
    labs(
      title = "Species-Environment Associations in Coastal Dunes",
      subtitle = "Species positioned near environmental arrows show strong associations with those land cover types",
      x = paste("CCA1 (", round(100 * eigenvals(cca_result)[1] / sum(eigenvals(cca_result)), 1), "%)", sep = ""),
      y = paste("CCA2 (", round(100 * eigenvals(cca_result)[2] / sum(eigenvals(cca_result)), 1), "%)", sep = "")
    ) +
    theme(
      plot.title = element_text(face = "bold", size = 28),
      plot.subtitle = element_text(size = 22),
      axis.title.x = element_text(size = 18),
      axis.title.y = element_text(size = 18),
      axis.text.x = element_text(size = 16),
      axis.text.y = element_text(size = 16),
      panel.grid.minor = element_blank(),
      legend.position = "none"
    ) +
    # Expand plot limits to accommodate labels
    expand_limits(x = c(-2, 2), y = c(-2, 2))
  
  print(p_associations)
  
  # Save the plot
  ggsave(here("figures","cca_species_environment_associations.png"), p_associations,
         width = 12, height = 8)
} else {
  cat("Species-environment association plot could not be created.\n")
}
```

## **Interpretation of Regional CCA Results**

The Canonical Correspondence Analysis reveals important relationships between coastal dune vegetation and land cover variables across the three regions of Catalonia:

### **Regional Model Performance**
The CCA models successfully explain the variation in species composition through land cover gradients, with explained variance percentages indicating the strength of species-environment relationships in each region:

- **Girona**: Shows distinct environmental patterns typical of the northern coast
- **Barcelona**: Reflects the high urbanization pressure of the metropolitan area  
- **Tarragona**: Demonstrates southern coastal characteristics with different land use patterns

### **Key Environmental Gradients by Region**
The analysis identifies the most important land cover variables that structure vegetation communities in each region:

#### **Regional Differences in Environmental Drivers**
1. **Girona**: Natural vegetation gradients dominate, with forest and scrubland transitions being key drivers
2. **Barcelona**: Urban-natural gradient is the primary structuring force due to metropolitan pressure
3. **Tarragona**: Agricultural and coastal development gradients are most important

#### **Common Gradients Across Regions**
- **Urban-Natural Gradient**: The contrast between urban development and natural habitats appears as a major structuring force
- **Vegetation Cover Gradient**: Different types of vegetation cover (forests, scrubland, grassland) create distinct habitat conditions
- **Disturbance Gradient**: Areas with different levels of human disturbance support different species assemblages
- **Moisture Gradient**: Freshwater and saltwater influences create specific environmental conditions

### **Species-Environment Associations by Region**
Regional analysis reveals how species respond differently to environmental pressures:

#### **Regional Specialist Species**
- **Girona specialists**: Species strongly associated with natural forest and scrubland environments
- **Barcelona specialists**: Species adapted to urban-edge and fragmented habitats
- **Tarragona specialists**: Species associated with agricultural matrices and developed coastlines

#### **Regional Generalists**
Species found across all regions but showing different environmental associations depending on local land cover patterns.

#### **Indicator Species**
Species that can serve as indicators of specific environmental conditions in each region, providing tools for monitoring ecosystem health.

### **Conservation Implications by Region**

#### **Girona Conservation Priorities**
- Protect remaining natural vegetation gradients
- Maintain forest-scrubland transitions that support specialized species
- Focus on habitat connectivity in natural areas

#### **Barcelona Conservation Priorities**  
- Mitigate urban pressure effects on dune vegetation
- Create buffer zones between urban areas and natural habitats
- Restore fragmented coastal areas

#### **Tarragona Conservation Priorities**
- Balance agricultural land use with coastal habitat conservation
- Manage development impacts on species assemblages
- Maintain traditional land use practices that support biodiversity

### **Management Recommendations by Region**

#### **Regional Management Strategies**
1. **Girona**: Focus on natural habitat preservation and connectivity
2. **Barcelona**: Emphasize urban-nature interface management and restoration
3. **Tarragona**: Balance agricultural practices with coastal conservation

#### **Cross-Regional Coordination**
The combined analysis shows that while each region has distinct characteristics, coordinated management across regions is needed to maintain the full spectrum of coastal dune vegetation communities.

### **Statistical Significance and Reliability**
The permutation tests confirm that the observed species-environment relationships are statistically significant in each region, providing confidence for management decisions. Regional differences in F-values and p-values indicate varying strengths of environmental control on vegetation patterns.

### **Future Research Directions**
The regional CCA results suggest several important research priorities:

1. **Long-term Monitoring**: Establish region-specific monitoring protocols to track changes in species-environment relationships over time
2. **Climate Change Adaptation**: Investigate how changing climate conditions may alter the environmental gradients identified in each region
3. **Restoration Effectiveness**: Use the species-environment associations to guide and evaluate restoration projects in each region
4. **Cross-Regional Connectivity**: Study gene flow and species movement between regions to inform corridor design

### **Data Quality and Limitations**
The CCA analysis is based on current land cover data and vegetation surveys. The strength of the analysis depends on:

- **Sample Size**: Regions with more sampling sites show stronger statistical relationships
- **Environmental Variation**: Areas with greater land cover diversity provide more robust environmental gradients
- **Temporal Considerations**: Results represent current conditions and may change with ongoing coastal development

### **Methodological Considerations**
The 50m buffer zone used for land cover analysis captures the immediate environmental context of dune vegetation. This scale is appropriate for understanding direct land use effects but may not capture broader landscape influences that operate at larger scales.

The CCA approach effectively identifies linear relationships between species composition and environmental variables. Non-linear relationships and complex interactions between environmental factors may require additional analytical approaches in future studies.

This comprehensive regional analysis provides the quantitative foundation needed for evidence-based coastal dune conservation and management across the diverse landscapes of Catalonia.
