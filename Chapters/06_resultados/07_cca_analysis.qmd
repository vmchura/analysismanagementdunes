```{r 07_07_setup, include=FALSE}
# Opciones globales de knitr - controla todos los fragmentos de código
knitr::opts_chunk$set(
  warning = FALSE,
  message = FALSE,
  echo = FALSE
)

# Cargar librerías necesarias
library(tidyverse)
library(ggplot2)
library(vegan)     # Para análisis CCA
library(gridExtra) # Para organizar múltiples gráficos
library(RColorBrewer) # Para paletas de colores
library(patchwork)  # Para combinar gráficos
library(ggrepel)   # Para etiquetas de texto sin solapamiento
library(here)
# Cargar configuración global
source(here("R","global_config.R"))

# Cargar datos
load(here("data","all_observations_split.RData"))
load(here("data","all_land_cover_data.RData"))

# --- Análisis de Correspondencia Canónica (CCA) ---

# Función para preparar matriz de datos de especies para análisis CCA por región
# Agrega datos a nivel de parcela a nivel de playa para coincidir con la escala de datos ambientales
prepare_species_matrix <- function(region_data) {
  # Obtener columnas de especies - excluir columnas que no son especies (plot, id_beach, region)
  non_species_cols <- c("plot", "id_beach", "region")
  species_cols <- setdiff(names(region_data), non_species_cols)
  
  # Agregar datos de especies por playa (calcular cobertura media por playa)
  species_by_beach <- region_data %>%
    # Convertir valores de Braun-Blanquet a porcentajes primero
    mutate(across(all_of(species_cols), bb_to_percentage)) %>%
    # Agrupar por playa y calcular cobertura media de especies
    group_by(id_beach) %>%
    summarise(across(all_of(species_cols), ~ mean(.x, na.rm = TRUE)), .groups = "drop") %>%
    # Mantener id_beach para emparejar con datos ambientales
    arrange(id_beach)
  
  # Extraer solo las columnas de especies para la matriz
  species_matrix <- species_by_beach %>%
    select(all_of(species_cols)) %>%
    as.matrix()
  
  # Eliminar especies que nunca están presentes en todas las playas
  species_present <- colSums(species_matrix) > 0
  species_matrix_final <- species_matrix[, species_present, drop = FALSE]
  
  # Devolver tanto la matriz como los IDs de playa para emparejar
  return(list(
    matrix = species_matrix_final,
    beach_ids = species_by_beach$id_beach
  ))
}

# Función para preparar datos ambientales (cobertura del suelo) por región
prepare_env_matrix <- function(land_cover_region_data, region_species_data) {
  # Obtener los IDs de playa de los datos de especies
  beach_ids <- region_species_data$id_beach
  
  # Obtener datos de cobertura del suelo para las playas en nuestros datos de especies
  env_data <- land_cover_region_data %>%
    filter(id_beach %in% beach_ids) %>%
    arrange(id_beach)
  
  # Seleccionar variables relevantes de cobertura del suelo
  # Enfocarse en las variables más ecológicamente significativas a 50m de distancia
  land_cover_cols <- grep("^x50m_.*_percent$", names(env_data), value = TRUE)
  
  # Eliminar variables con muy poca variación o todos ceros
  env_matrix <- env_data %>%
    select(id_beach, all_of(land_cover_cols)) %>%
    # Eliminar columnas que son todo ceros o tienen muy poca varianza
    select(where(~ var(., na.rm = TRUE) > 0.01))
  
  # Limpiar nombres de columnas para mejor legibilidad
  numeric_cols <- setdiff(names(env_matrix), "id_beach")
  names(env_matrix)[names(env_matrix) %in% numeric_cols] <- 
    gsub("^x50m_(.*)_percent$", "\\1", numeric_cols)
  names(env_matrix) <- gsub("_", " ", names(env_matrix))
  names(env_matrix) <- tools::toTitleCase(names(env_matrix))
  names(env_matrix)[names(env_matrix) == "Id Beach"] <- "id_beach"
  
  return(env_matrix)
}
```
```{r}
#| echo: false
#| eval: true
#| results: 'hide'
#| message: false
#| warning: false
# Función para ejecutar análisis CCA para una región
run_cca_analysis <- function(region_data, land_cover_region_data, region_name) {
  # Verificar si tenemos suficientes datos
  if(nrow(region_data) < 3) {
    warning(paste("No hay suficientes datos para análisis CCA en", region_name))
    return(NULL)
  }
  
  # Preparar matriz de especies (agregada por playa)
  species_result <- prepare_species_matrix(region_data)
  species_matrix <- species_result$matrix
  species_beach_ids <- species_result$beach_ids
  
  if(ncol(species_matrix) < 2) {
    warning(paste("No hay suficientes especies para análisis CCA en", region_name))
    return(NULL)
  }
  
  # Preparar matriz ambiental
  env_matrix <- prepare_env_matrix(land_cover_region_data, region_data)
  
  # Emparejar datos ambientales con los datos agregados de especies
  env_matrix_matched <- env_matrix %>% 
    filter(id_beach %in% species_beach_ids) %>%
    arrange(id_beach)
  
  # Asegurar que ambos conjuntos de datos tengan las mismas playas en el mismo orden
  common_beaches <- intersect(species_beach_ids, env_matrix_matched$id_beach)
  
  if(length(common_beaches) < 3) {
    warning(paste("No hay suficientes playas coincidentes para análisis CCA en", region_name))
    return(NULL)
  }
  
  # Filtrar ambos conjuntos de datos a playas comunes y asegurar el mismo orden
  beach_order <- sort(common_beaches)
  
  # Reordenar matriz de especies para coincidir con orden de playas
  species_order <- match(beach_order, species_beach_ids)
  species_matrix_final <- species_matrix[species_order, , drop = FALSE]
  
  # Reordenar matriz ambiental para coincidir con orden de playas
  env_matrix_final <- env_matrix_matched %>% 
    filter(id_beach %in% beach_order) %>%
    arrange(id_beach)
  
  # Eliminar id_beach de la matriz ambiental para el análisis
  env_vars <- env_matrix_final %>% select(-id_beach)
  
  # Eliminar variables ambientales con varianza cero
  env_vars <- env_vars[, sapply(env_vars, var, na.rm = TRUE) > 0, drop = FALSE]
  
  if(ncol(env_vars) == 0) {
    warning(paste("No se encontraron variables ambientales con variación en", region_name))
    return(NULL)
  }
  
  # Verificación final: asegurar que ambas matrices tengan el mismo número de filas
  if(nrow(species_matrix_final) != nrow(env_vars)) {
    warning(paste("Desajuste final entre filas de datos de especies y ambientales en", region_name,
                  "- Especies:", nrow(species_matrix_final), "Ambientales:", nrow(env_vars)))
    return(NULL)
  }
  
  # Ejecutar CCA
  tryCatch({
    cca_result <- cca(species_matrix_final ~ ., data = env_vars)
    
    # Calcular varianza explicada
    eigenvals <- eigenvals(cca_result)
    total_inertia <- sum(eigenvals)
    constrained_inertia <- sum(eigenvals[1:min(length(eigenvals), ncol(env_vars))])
    explained_variance <- constrained_inertia / total_inertia * 100
    
    return(list(
      cca = cca_result,
      species_matrix = species_matrix_final,
      env_matrix = env_vars,
      explained_variance = explained_variance,
      beach_ids = beach_order,
      region = region_name
    ))
  }, error = function(e) {
    warning(paste("El análisis CCA falló para", region_name, ":", e$message))
    return(NULL)
  })
}
```
```{r}
#| echo: false
#| eval: true
#| results: 'hide'
#| message: false
#| warning: false
# Ejecutar CCA para cada región
girona_cca <- run_cca_analysis(beaches_by_region$Girona, land_cover_data$Girona, "Girona")
barcelona_cca <- run_cca_analysis(beaches_by_region$Barcelona, land_cover_data$Barcelona, "Barcelona")
tarragona_cca <- run_cca_analysis(beaches_by_region$Tarragona, land_cover_data$Tarragona, "Tarragona")

# Combinar todas las regiones para un análisis comprensivo
# Preparar matriz combinada de especies
all_species_data <- bind_rows(
  beaches_by_region$Girona %>% mutate(region = "Girona"),
  beaches_by_region$Barcelona %>% mutate(region = "Barcelona"),
  beaches_by_region$Tarragona %>% mutate(region = "Tarragona")
)

# Preparar datos combinados de cobertura del suelo
all_land_cover <- bind_rows(
  land_cover_data$Girona %>% mutate(region = "Girona"),
  land_cover_data$Barcelona %>% mutate(region = "Barcelona"),
  land_cover_data$Tarragona %>% mutate(region = "Tarragona")
)

# Ejecutar CCA combinado
combined_cca <- run_cca_analysis(all_species_data, all_land_cover, "Combined")

# Función para crear biplot CCA
create_cca_biplot <- function(cca_analysis, title_suffix = "") {
  if(is.null(cca_analysis)) return(NULL)
  
  cca_result <- cca_analysis$cca
  
  # Extraer puntuaciones de sitios (parcelas)
  site_scores <- data.frame(
    CCA1 = scores(cca_result, display = "sites")[, 1],
    CCA2 = scores(cca_result, display = "sites")[, 2],
    Beach = cca_analysis$beach_ids
  )
  
  # Extraer puntuaciones de especies
  species_scores <- data.frame(
    CCA1 = scores(cca_result, display = "species")[, 1],
    CCA2 = scores(cca_result, display = "species")[, 2],
    Species = rownames(scores(cca_result, display = "species"))
  )
  
  # Extraer puntuaciones de variables ambientales (flechas del biplot)
  env_scores <- data.frame(
    CCA1 = scores(cca_result, display = "bp")[, 1],
    CCA2 = scores(cca_result, display = "bp")[, 2],
    Variable = rownames(scores(cca_result, display = "bp"))
  )
  
  # Seleccionar principales especies por distancia desde el origen para etiquetado
  species_scores$distance <- sqrt(species_scores$CCA1^2 + species_scores$CCA2^2)
  top_species <- species_scores %>%
    arrange(desc(distance)) %>%
    slice_head(n = 8)
  
  # Crear el biplot
  p <- ggplot() +
    # Añadir puntos de sitios
    geom_point(data = site_scores, aes(x = CCA1, y = CCA2), 
               color = "blue", alpha = 0.6, size = 5) +
    # Añadir flechas ambientales
    geom_segment(data = env_scores, 
                 aes(x = 0, y = 0, xend = CCA1 * 2, yend = CCA2 * 2),
                 arrow = arrow(length = unit(0.8, "cm")), 
                 color = "red", size = 2, alpha = 0.8) +
    # Añadir etiquetas de variables ambientales con repulsión
    ggrepel::geom_text_repel(data = env_scores, 
              aes(x = CCA1 * 2.3, y = CCA2 * 2.3, label = Variable),
              color = "red", fontface = "bold", size = 8,
              max.overlaps = Inf,
              box.padding = 0.5,
              point.padding = 0.3,
              segment.color = "red",
              segment.alpha = 0.5) +
    # Añadir puntos de principales especies
    geom_point(data = top_species, aes(x = CCA1, y = CCA2), 
               color = "darkgreen", alpha = 0.8, size = 4) +
    # Añadir etiquetas de principales especies con repulsión para evitar solapamiento
    ggrepel::geom_text_repel(data = top_species, 
              aes(x = CCA1, y = CCA2, label = Species),
              color = "darkgreen", fontface = "italic", size = 6,
              max.overlaps = Inf, 
              box.padding = 0.5,
              point.padding = 0.3,
              segment.color = "darkgreen",
              segment.alpha = 0.5) +
    # Personalizar apariencia
    theme_minimal() +
    labs(
      title = paste("Biplot CCA:", cca_analysis$region, title_suffix),
      subtitle = paste("Varianza explicada:", round(cca_analysis$explained_variance, 1), "%"),
      x = paste("CCA1 (", round(100 * eigenvals(cca_result)[1] / sum(eigenvals(cca_result)), 1), "%)", sep = ""),
      y = paste("CCA2 (", round(100 * eigenvals(cca_result)[2] / sum(eigenvals(cca_result)), 1), "%)", sep = "")
    ) +
    theme(
      plot.title = element_text(face = "bold", size = 24),
      plot.subtitle = element_text(size = 18),
      axis.title.x = element_text(size = 16),
      axis.title.y = element_text(size = 16),
      axis.text.x = element_text(size = 14),
      axis.text.y = element_text(size = 14),
      panel.grid.minor = element_blank(),
      aspect.ratio = 1  # Esto hace el gráfico cuadrado
    )
  
  return(p)
}

# Función para probar la significancia de variables ambientales
test_env_significance <- function(cca_analysis) {
  if(is.null(cca_analysis)) return(NULL)
  
  # Probar significancia general del modelo
  model_test <- anova(cca_analysis$cca, permutations = 999)
  
  # Probar significancia de variables individuales
  var_test <- anova(cca_analysis$cca, by = "terms", permutations = 999)
  
  return(list(
    model = model_test,
    variables = var_test
  ))
}

# Probar significancia para cada región
girona_sig <- test_env_significance(girona_cca)
barcelona_sig <- test_env_significance(barcelona_cca)
tarragona_sig <- test_env_significance(tarragona_cca)
combined_sig <- test_env_significance(combined_cca)
```

Esta sección presenta los resultados del Análisis de Correspondencia Canónica (CCA) para explorar las relaciones entre la composición de vegetación de dunas costeras y las variables de cobertura del suelo por región. El CCA es una técnica de ordenación restringida que relaciona directamente la composición de especies con gradientes ambientales, ayudándonos a entender qué factores de cobertura del suelo explican mejor los patrones de vegetación en cada región (Girona, Barcelona y Tarragona).

**Nota Metodológica**: El análisis agrega los datos de especies a nivel de parcela a nivel de playa calculando la cobertura media de especies por playa. Este enfoque asegura que la matriz de especies coincida con la escala de los datos ambientales (una observación por playa) y evita problemas de pseudorreplicación que surgirían al duplicar valores ambientales para múltiples parcelas dentro de la misma playa.

```{r}
#| label: fig-cca-combined
#| fig-cap: "Biplot CCA mostrando la relación entre la composición de vegetación y las variables de cobertura del suelo en todos los sitios de dunas costeras. Los puntos azules representan parcelas de muestreo, las flechas rojas muestran gradientes ambientales, y los puntos verdes indican especies clave. La longitud de las flechas indica la intensidad del gradiente ambiental."
#| echo: false
#| eval: true
#| output: true
#| fig-width: 20
#| fig-height: 20
#| fig-pos: "H"

# Create and display the combined CCA biplot
if(!is.null(combined_cca)) {
  p_combined <- create_cca_biplot(combined_cca, "- All Regions")
  print(p_combined)
  
  # Guardar el gráfico
  ggsave(here("figures","cca_combined_analysis.png"), p_combined, width = 12, height = 8)
}
```

```{r}
#| label: fig-cca-regional
#| fig-cap: "Biplots CCA regionales mostrando cómo varían las relaciones vegetación-ambiente entre las tres regiones costeras de Cataluña. Cada gráfico muestra los gradientes específicos de cobertura del suelo que estructuran las comunidades de vegetación en cada región. Las flechas rojas representan gradientes ambientales (variables de cobertura del suelo), los puntos y etiquetas verdes muestran especies de plantas, y los puntos azules representan sitios de muestreo (playas). Las flechas más largas indican gradientes ambientales más fuertes, y las especies posicionadas más cerca de las puntas de las flechas están más fuertemente asociadas con esas condiciones ambientales."
#| echo: false
#| eval: true
#| results: 'hide'
#| message: false
#| warning: false
#| output: true
#| fig-width: 15
#| fig-height: 45
#| fig-pos: "H"

# Create regional CCA biplots
regional_plots <- list()

if(!is.null(girona_cca)) {
  regional_plots$girona <- create_cca_biplot(girona_cca)
}

if(!is.null(barcelona_cca)) {
  regional_plots$barcelona <- create_cca_biplot(barcelona_cca)
}

if(!is.null(tarragona_cca)) {
  regional_plots$tarragona <- create_cca_biplot(tarragona_cca)
}

# Combine regional plots
if(length(regional_plots) > 0) {
  # Filter out NULL plots
  valid_plots <- regional_plots[!sapply(regional_plots, is.null)]
  
  if(length(valid_plots) > 0) {
    if(length(valid_plots) == 3) {
      combined_regional <- valid_plots$girona / valid_plots$barcelona / valid_plots$tarragona
    } else if(length(valid_plots) == 2) {
      combined_regional <- valid_plots[[1]] / valid_plots[[2]]
    } else {
      combined_regional <- valid_plots[[1]]
    }
    
    print(combined_regional)
    
    # Guardar el gráfico combinado regional
    ggsave(here("figures","cca_regional_analysis.png"), combined_regional,
           width = 14, height = 12)
  }
} else {
  cat("No se pudieron realizar análisis CCA regionales.\n")
}
```

```{r}
#| label: tbl-cca-summary
#| tbl-cap: "Resumen de los resultados CCA mostrando la varianza explicada por las variables de cobertura del suelo en cada región y la significancia general de las relaciones especies-ambiente."
#| echo: false
#| eval: true
#| results: 'hide'
#| message: false
#| warning: false
#| output: true

# Crear tabla resumen de resultados CCA
cca_summary <- data.frame(
  Region = character(),
  Explained_Variance_Percent = numeric(),
  Num_Environmental_Variables = integer(),
  Num_Species = integer(),
  Model_F_Value = numeric(),
  Model_P_Value = numeric(),
  stringsAsFactors = FALSE
)

# Función auxiliar para extraer información de significancia
extract_sig_info <- function(sig_test) {
  if(is.null(sig_test) || is.null(sig_test$model)) {
    return(list(f_val = NA, p_val = NA))
  }
  
  return(list(
    f_val = sig_test$model$F[1],
    p_val = sig_test$model$`Pr(>F)`[1]
  ))
}

# Añadir datos para cada región
regions <- list(
  list(name = "Girona", cca = girona_cca, sig = girona_sig),
  list(name = "Barcelona", cca = barcelona_cca, sig = barcelona_sig),
  list(name = "Tarragona", cca = tarragona_cca, sig = tarragona_sig),
  list(name = "Combined", cca = combined_cca, sig = combined_sig)
)

for(region in regions) {
  if(!is.null(region$cca)) {
    sig_info <- extract_sig_info(region$sig)
    
    cca_summary <- rbind(cca_summary, data.frame(
      Region = region$name,
      Explained_Variance_Percent = round(region$cca$explained_variance, 1),
      Num_Environmental_Variables = ncol(region$cca$env_matrix),
      Num_Species = ncol(region$cca$species_matrix),
      Model_F_Value = round(sig_info$f_val, 2),
      Model_P_Value = round(sig_info$p_val, 3),
      stringsAsFactors = FALSE
    ))
  }
}

# Mostrar la tabla
if(nrow(cca_summary) > 0) {
  knitr::kable(cca_summary, 
               col.names = c("Región", "Varianza Explicada (%)", "Var. Ambientales", 
                           "Especies", "Valor F", "Valor P"),
               align = c("l", "c", "c", "c", "c", "c"))
}
```

```{r}
#| label: tbl-env-variables
#| tbl-cap: "Significancia de variables ambientales individuales en el modelo CCA combinado, mostrando qué tipos de cobertura del suelo son más importantes para explicar los patrones de vegetación."
#| echo: false
#| eval: true
#| results: 'hide'
#| message: false
#| warning: false
#| output: true

# Crear tabla de significancia de variables ambientales
if(!is.null(combined_sig) && !is.null(combined_sig$variables)) {
  env_var_table <- data.frame(
    Environmental_Variable = rownames(combined_sig$variables),
    F_Value = round(combined_sig$variables$F, 2),
    P_Value = round(combined_sig$variables$`Pr(>F)`, 3),
    Significance = ifelse(combined_sig$variables$`Pr(>F)` < 0.001, "***",
                         ifelse(combined_sig$variables$`Pr(>F)` < 0.01, "**",
                               ifelse(combined_sig$variables$`Pr(>F)` < 0.05, "*",
                                     ifelse(combined_sig$variables$`Pr(>F)` < 0.1, ".", ""))))
  )
  
  # Eliminar la fila 'Residual' si existe
  env_var_table <- env_var_table[!is.na(env_var_table$F_Value), ]
  
  # Traducir nombres de variables ambientales usando el diccionario con manejo de errores
  tryCatch({
    env_var_table$Environmental_Variable <- translate_labels(env_var_table$Environmental_Variable)
  }, error = function(e) {
    # Si hay error en traducción, usar traducción manual para términos faltantes
    env_var_table$Environmental_Variable <<- sapply(env_var_table$Environmental_Variable, function(var) {
      # Diccionario de respaldo para variables específicas de CCA
      backup_translations <- c(
        "Forests" = "Bosques",
        "Crops" = "Cultivos", 
        "Scrubland" = "Matorral",
        "Urban" = "Urbano",
        "Grassland" = "Pastizal",
        "Forestry Bare Soil" = "Suelo Desnudo Forestal",
        "Freshwater" = "Agua Dulce",
        "Lagoon And Salt Marshes" = "Lagunas y Marismas",
        "Communication Routes" = "Vías de Comunicación"
      )
      
      if (var %in% names(backup_translations)) {
        return(backup_translations[var])
      } else {
        # Limpiar texto básico si no está en diccionario
        cleaned <- gsub("_", " ", var)
        cleaned <- tools::toTitleCase(cleaned)
        return(cleaned)
      }
    })
  })
  
  # Ordenar por valor F (descendente)
  env_var_table <- env_var_table[order(-env_var_table$F_Value), ]
  
  knitr::kable(env_var_table,
               col.names = c("Variable Ambiental", "Valor F", "Valor P", "Significancia"),
               align = c("l", "c", "c", "c"),
               caption = "Códigos de significancia: *** p<0.001, ** p<0.01, * p<0.05, . p<0.1",
               row.names = FALSE)
} else {
  cat("Resultados de prueba de significancia de variables ambientales no disponibles.\n")
}
```

```{r}
#| label: fig-species-environment-associations
#| fig-cap: "Asociaciones especies-ambiente del análisis CCA, mostrando qué especies están más fuertemente asociadas con tipos específicos de cobertura del suelo. Las especies posicionadas más cerca de las flechas ambientales están más fuertemente asociadas con esas variables de cobertura del suelo."
#| echo: false
#| eval: true
#| results: 'hide'
#| message: false
#| warning: false
#| output: true
#| fig-width: 20
#| fig-height: 20
#| fig-pos: "H"

# Crear un gráfico detallado de asociaciones especies-ambiente
if(!is.null(combined_cca)) {
  cca_result <- combined_cca$cca
  
  # Extraer todas las puntuaciones de especies (no solo las principales)
  all_species_scores <- data.frame(
    CCA1 = scores(cca_result, display = "species")[, 1],
    CCA2 = scores(cca_result, display = "species")[, 2],
    Species = rownames(scores(cca_result, display = "species"))
  )
  
  # Calcular distancia desde el origen para cada especie
  all_species_scores$distance <- sqrt(all_species_scores$CCA1^2 + all_species_scores$CCA2^2)
  
  # Obtener las principales especies para etiquetado (aquellas con asociaciones más fuertes)
  top_species_detailed <- all_species_scores %>%
    arrange(desc(distance)) %>%
    slice_head(n = 12)
  
  # Extraer puntuaciones de variables ambientales
  env_scores_detailed <- data.frame(
    CCA1 = scores(cca_result, display = "bp")[, 1],
    CCA2 = scores(cca_result, display = "bp")[, 2],
    Variable = rownames(scores(cca_result, display = "bp"))
  )
  
  # Crear gráfico detallado de asociaciones
  p_associations <- ggplot() +
    # Añadir todos los puntos de especies (pequeños, semi-transparentes)
    geom_point(data = all_species_scores, aes(x = CCA1, y = CCA2), 
               color = "lightgreen", alpha = 0.4, size = 2) +
    # Añadir puntos de principales especies (más grandes, más visibles)
    geom_point(data = top_species_detailed, aes(x = CCA1, y = CCA2), 
               color = "darkgreen", alpha = 0.8, size = 4) +
    # Añadir etiquetas de especies para principales especies con repulsión
    ggrepel::geom_text_repel(data = top_species_detailed, 
              aes(x = CCA1, y = CCA2, label = Species),
              color = "darkgreen", fontface = "italic", size = 8,
              max.overlaps = Inf,
              box.padding = 0.5,
              point.padding = 0.3,
              segment.color = "darkgreen",
              segment.alpha = 0.5) +
    # Añadir flechas ambientales (más gruesas)
    geom_segment(data = env_scores_detailed, 
                 aes(x = 0, y = 0, xend = CCA1 * 2.5, yend = CCA2 * 2.5),
                 arrow = arrow(length = unit(1.0, "cm")), 
                 color = "red", size = 2.5, alpha = 0.9) +
    # Añadir etiquetas de variables ambientales con repulsión
    ggrepel::geom_text_repel(data = env_scores_detailed, 
              aes(x = CCA1 * 2.8, y = CCA2 * 2.8, label = Variable),
              color = "red", fontface = "bold", size = 10,
              max.overlaps = Inf,
              box.padding = 0.5,
              point.padding = 0.3,
              segment.color = "red",
              segment.alpha = 0.5) +
    # Añadir líneas de origen
    geom_hline(yintercept = 0, linetype = "dashed", alpha = 0.5) +
    geom_vline(xintercept = 0, linetype = "dashed", alpha = 0.5) +
    # Personalizar apariencia
    theme_minimal() +
    labs(
      title = "Asociaciones Especies-Ambiente en Dunas Costeras",
      subtitle = "Las especies posicionadas cerca de flechas ambientales muestran fuertes asociaciones con esos tipos de cobertura del suelo",
      x = paste("CCA1 (", round(100 * eigenvals(cca_result)[1] / sum(eigenvals(cca_result)), 1), "%)", sep = ""),
      y = paste("CCA2 (", round(100 * eigenvals(cca_result)[2] / sum(eigenvals(cca_result)), 1), "%)", sep = "")
    ) +
    theme(
      plot.title = element_text(face = "bold", size = 28),
      plot.subtitle = element_text(size = 22),
      axis.title.x = element_text(size = 18),
      axis.title.y = element_text(size = 18),
      axis.text.x = element_text(size = 16),
      axis.text.y = element_text(size = 16),
      panel.grid.minor = element_blank(),
      legend.position = "none"
    ) +
    # Expandir límites del gráfico para acomodar etiquetas
    expand_limits(x = c(-2, 2), y = c(-2, 2))
  
  print(p_associations)
  
  # Guardar el gráfico
  ggsave(here("figures","cca_species_environment_associations.png"), p_associations,
         width = 12, height = 8)
} else {
  cat("No se pudo crear el gráfico de asociaciones especies-ambiente.\n")
}
```

## **Interpretación de los Resultados CCA Regionales**

El Análisis de Correspondencia Canónica revela importantes relaciones entre la vegetación de dunas costeras y las variables de cobertura del suelo en las tres regiones de Cataluña:

### **Rendimiento del Modelo Regional**
Los modelos CCA explican exitosamente la variación en la composición de especies a través de gradientes de cobertura del suelo, con porcentajes de varianza explicada que indican la fuerza de las relaciones especies-ambiente en cada región:

- **Girona**: Muestra patrones ambientales distintivos típicos de la costa norte
- **Barcelona**: Refleja la alta presión de urbanización del área metropolitana  
- **Tarragona**: Demuestra características costeras del sur con diferentes patrones de uso del suelo

### **Gradientes Ambientales Clave por Región**
El análisis identifica las variables de cobertura del suelo más importantes que estructuran las comunidades de vegetación en cada región:

#### **Diferencias Regionales en Factores Ambientales**
1. **Girona**: Los gradientes de vegetación natural dominan, con transiciones de bosque y matorral siendo factores clave
2. **Barcelona**: El gradiente urbano-natural es la fuerza estructurante principal debido a la presión metropolitana
3. **Tarragona**: Los gradientes agrícolas y de desarrollo costero son los más importantes

#### **Gradientes Comunes Entre Regiones**
- **Gradiente Urbano-Natural**: El contraste entre desarrollo urbano y hábitats naturales aparece como una fuerza estructurante principal
- **Gradiente de Cobertura Vegetal**: Diferentes tipos de cobertura vegetal (bosques, matorrales, pastizales) crean condiciones de hábitat distintas
- **Gradiente de Perturbación**: Áreas con diferentes niveles de perturbación humana soportan diferentes ensamblajes de especies
- **Gradiente de Humedad**: Las influencias de agua dulce y salada crean condiciones ambientales específicas

### **Asociaciones Especies-Ambiente por Región**
El análisis regional revela cómo las especies responden de manera diferente a las presiones ambientales:

#### **Especies Especialistas Regionales**
- **Especialistas de Girona**: Especies fuertemente asociadas con ambientes naturales de bosque y matorral
- **Especialistas de Barcelona**: Especies adaptadas a hábitats de borde urbano y fragmentados
- **Especialistas de Tarragona**: Especies asociadas con matrices agrícolas y costas desarrolladas

#### **Generalistas Regionales**
Especies encontradas en todas las regiones pero mostrando diferentes asociaciones ambientales dependiendo de los patrones locales de cobertura del suelo.

#### **Especies Indicadoras**
Especies que pueden servir como indicadoras de condiciones ambientales específicas en cada región, proporcionando herramientas para monitorear la salud del ecosistema.

### **Implicaciones para la Conservación por Región**

#### **Prioridades de Conservación en Girona**
- Proteger los gradientes de vegetación natural restantes
- Mantener las transiciones bosque-matorral que soportan especies especializadas
- Enfocarse en la conectividad de hábitats en áreas naturales

#### **Prioridades de Conservación en Barcelona**  
- Mitigar los efectos de la presión urbana en la vegetación dunar
- Crear zonas buffer entre áreas urbanas y hábitats naturales
- Restaurar áreas costeras fragmentadas

#### **Prioridades de Conservación en Tarragona**
- Equilibrar el uso agrícola del suelo con la conservación de hábitats costeros
- Gestionar los impactos del desarrollo en los ensamblajes de especies
- Mantener las prácticas tradicionales de uso del suelo que soportan la biodiversidad

### **Recomendaciones de Gestión por Región**

#### **Estrategias de Gestión Regional**
1. **Girona**: Enfocarse en la preservación de hábitats naturales y conectividad
2. **Barcelona**: Enfatizar la gestión de la interfaz urbano-natural y restauración
3. **Tarragona**: Equilibrar las prácticas agrícolas con la conservación costera

#### **Coordinación Inter-regional**
El análisis combinado muestra que aunque cada región tiene características distintivas, se necesita gestión coordinada entre regiones para mantener el espectro completo de comunidades de vegetación de dunas costeras.

### **Significancia Estadística y Confiabilidad**
Las pruebas de permutación confirman que las relaciones especies-ambiente observadas son estadísticamente significativas en cada región, proporcionando confianza para las decisiones de gestión. Las diferencias regionales en valores F y valores p indican diferentes intensidades de control ambiental sobre los patrones de vegetación.

### **Direcciones de Investigación Futura**
Los resultados CCA regionales sugieren varias prioridades importantes de investigación:

1. **Monitoreo a Largo Plazo**: Establecer protocolos de monitoreo específicos por región para rastrear cambios en las relaciones especies-ambiente a lo largo del tiempo
2. **Adaptación al Cambio Climático**: Investigar cómo las condiciones climáticas cambiantes pueden alterar los gradientes ambientales identificados en cada región
3. **Efectividad de Restauración**: Usar las asociaciones especies-ambiente para guiar y evaluar proyectos de restauración en cada región
4. **Conectividad Inter-regional**: Estudiar el flujo génico y movimiento de especies entre regiones para informar el diseño de corredores

### **Calidad de Datos y Limitaciones**
El análisis CCA se basa en datos actuales de cobertura del suelo y relevamientos de vegetación. La fuerza del análisis depende de:

- **Tamaño de Muestra**: Las regiones con más sitios de muestreo muestran relaciones estadísticas más fuertes
- **Variación Ambiental**: Las áreas con mayor diversidad de cobertura del suelo proporcionan gradientes ambientales más robustos
- **Consideraciones Temporales**: Los resultados representan condiciones actuales y pueden cambiar con el desarrollo costero continuo

### **Consideraciones Metodológicas**
La zona buffer de 50m utilizada para el análisis de cobertura del suelo captura el contexto ambiental inmediato de la vegetación dunar. Esta escala es apropiada para entender los efectos directos del uso del suelo pero puede no capturar influencias del paisaje más amplias que operan a escalas mayores.

El enfoque CCA identifica efectivamente relaciones lineales entre la composición de especies y variables ambientales. Las relaciones no lineales e interacciones complejas entre factores ambientales pueden requerir enfoques analíticos adicionales en estudios futuros.

Este análisis regional comprensivo proporciona la base cuantitativa necesaria para la conservación y gestión de dunas costeras basada en evidencia a través de los diversos paisajes de Cataluña.
